saved_model_schema_version: 1
meta_graphs {
  meta_info_def {
    stripped_op_list {
      op {
        name: "Add"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "AddN"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "sum"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_VARIANT
            }
          }
        }
        is_aggregate: true
        is_commutative: true
      }
      op {
        name: "ArgMax"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dimension"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "output_type"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "output_type"
          type: "type"
          default_value {
            type: DT_INT64
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Assert"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "data"
          type_list_attr: "T"
        }
        attr {
          name: "T"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "summarize"
          type: "int"
          default_value {
            i: 3
          }
        }
        is_stateful: true
      }
      op {
        name: "AssignAddVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "AssignVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        input_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "BiasAdd"
        input_arg {
          name: "value"
          type_attr: "T"
        }
        input_arg {
          name: "bias"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BiasAddGrad"
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
      }
      op {
        name: "BroadcastGradientArgs"
        input_arg {
          name: "s0"
          type_attr: "T"
        }
        input_arg {
          name: "s1"
          type_attr: "T"
        }
        output_arg {
          name: "r0"
          type_attr: "T"
        }
        output_arg {
          name: "r1"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Cast"
        input_arg {
          name: "x"
          type_attr: "SrcT"
        }
        output_arg {
          name: "y"
          type_attr: "DstT"
        }
        attr {
          name: "SrcT"
          type: "type"
        }
        attr {
          name: "DstT"
          type: "type"
        }
        attr {
          name: "Truncate"
          type: "bool"
          default_value {
            b: false
          }
        }
      }
      op {
        name: "ConcatOffset"
        input_arg {
          name: "concat_dim"
          type: DT_INT32
        }
        input_arg {
          name: "shape"
          type: DT_INT32
          number_attr: "N"
        }
        output_arg {
          name: "offset"
          type: DT_INT32
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
      }
      op {
        name: "ConcatV2"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        input_arg {
          name: "axis"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 2
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Const"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "value"
          type: "tensor"
        }
        attr {
          name: "dtype"
          type: "type"
        }
      }
      op {
        name: "Conv2D"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropFilter"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "filter_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "Conv2DBackpropInput"
        input_arg {
          name: "input_sizes"
          type: DT_INT32
        }
        input_arg {
          name: "filter"
          type_attr: "T"
        }
        input_arg {
          name: "out_backprop"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "strides"
          type: "list(int)"
        }
        attr {
          name: "use_cudnn_on_gpu"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "dilations"
          type: "list(int)"
          default_value {
            list {
              i: 1
              i: 1
              i: 1
              i: 1
            }
          }
        }
      }
      op {
        name: "DenseToDenseSetOperation"
        input_arg {
          name: "set1"
          type_attr: "T"
        }
        input_arg {
          name: "set2"
          type_attr: "T"
        }
        output_arg {
          name: "result_indices"
          type: DT_INT64
        }
        output_arg {
          name: "result_values"
          type_attr: "T"
        }
        output_arg {
          name: "result_shape"
          type: DT_INT64
        }
        attr {
          name: "set_operation"
          type: "string"
        }
        attr {
          name: "validate_indices"
          type: "bool"
          default_value {
            b: true
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_UINT16
              type: DT_STRING
            }
          }
        }
      }
      op {
        name: "DynamicStitch"
        input_arg {
          name: "indices"
          type: DT_INT32
          number_attr: "N"
        }
        input_arg {
          name: "data"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "merged"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Equal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_QUINT8
              type: DT_QINT8
              type: DT_QINT32
              type: DT_STRING
              type: DT_BOOL
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "ExpandDims"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "dim"
          type_attr: "Tdim"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tdim"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Fill"
        input_arg {
          name: "dims"
          type_attr: "index_type"
        }
        input_arg {
          name: "value"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "index_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "FloorDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "FloorMod"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Greater"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "GreaterEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Identity"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "LessEqual"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type: DT_BOOL
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Log"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "MatMul"
        input_arg {
          name: "a"
          type_attr: "T"
        }
        input_arg {
          name: "b"
          type_attr: "T"
        }
        output_arg {
          name: "product"
          type_attr: "T"
        }
        attr {
          name: "transpose_a"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "transpose_b"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "MaxPool"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_UINT16
              type: DT_QINT8
            }
          }
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
              s: "NCHW_VECT_C"
            }
          }
        }
      }
      op {
        name: "MaxPoolGrad"
        input_arg {
          name: "orig_input"
          type_attr: "T"
        }
        input_arg {
          name: "orig_output"
          type_attr: "T"
        }
        input_arg {
          name: "grad"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "ksize"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "strides"
          type: "list(int)"
          has_minimum: true
          minimum: 4
        }
        attr {
          name: "padding"
          type: "string"
          allowed_values {
            list {
              s: "SAME"
              s: "VALID"
            }
          }
        }
        attr {
          name: "data_format"
          type: "string"
          default_value {
            s: "NHWC"
          }
          allowed_values {
            list {
              s: "NHWC"
              s: "NCHW"
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          default_value {
            type: DT_FLOAT
          }
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Maximum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Mean"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Merge"
        input_arg {
          name: "inputs"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        output_arg {
          name: "value_index"
          type: DT_INT32
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
      }
      op {
        name: "MergeV2Checkpoints"
        input_arg {
          name: "checkpoint_prefixes"
          type: DT_STRING
        }
        input_arg {
          name: "destination_prefix"
          type: DT_STRING
        }
        attr {
          name: "delete_old_dirs"
          type: "bool"
          default_value {
            b: true
          }
        }
        is_stateful: true
      }
      op {
        name: "Minimum"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Mul"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
        is_commutative: true
      }
      op {
        name: "Neg"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "NoOp"
      }
      op {
        name: "Pack"
        input_arg {
          name: "values"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "axis"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "Placeholder"
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
          default_value {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      op {
        name: "PlaceholderWithDefault"
        input_arg {
          name: "input"
          type_attr: "dtype"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
      }
      op {
        name: "RandomUniform"
        input_arg {
          name: "shape"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "dtype"
        }
        attr {
          name: "seed"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "seed2"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "dtype"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        is_stateful: true
      }
      op {
        name: "Range"
        input_arg {
          name: "start"
          type_attr: "Tidx"
        }
        input_arg {
          name: "limit"
          type_attr: "Tidx"
        }
        input_arg {
          name: "delta"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "Tidx"
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ReadVariableOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "value"
          type_attr: "dtype"
        }
        attr {
          name: "dtype"
          type: "type"
        }
        is_stateful: true
      }
      op {
        name: "RealDiv"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Reciprocal"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Relu"
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "activations"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
              type: DT_QINT8
            }
          }
        }
      }
      op {
        name: "ReluGrad"
        input_arg {
          name: "gradients"
          type_attr: "T"
        }
        input_arg {
          name: "features"
          type_attr: "T"
        }
        output_arg {
          name: "backprops"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_INT64
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
      }
      op {
        name: "Reshape"
        input_arg {
          name: "tensor"
          type_attr: "T"
        }
        input_arg {
          name: "shape"
          type_attr: "Tshape"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tshape"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "RestoreV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        output_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "SaveV2"
        input_arg {
          name: "prefix"
          type: DT_STRING
        }
        input_arg {
          name: "tensor_names"
          type: DT_STRING
        }
        input_arg {
          name: "shape_and_slices"
          type: DT_STRING
        }
        input_arg {
          name: "tensors"
          type_list_attr: "dtypes"
        }
        attr {
          name: "dtypes"
          type: "list(type)"
          has_minimum: true
          minimum: 1
        }
        is_stateful: true
      }
      op {
        name: "Select"
        input_arg {
          name: "condition"
          type: DT_BOOL
        }
        input_arg {
          name: "t"
          type_attr: "T"
        }
        input_arg {
          name: "e"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Shape"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShapeN"
        input_arg {
          name: "input"
          type_attr: "T"
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
          number_attr: "N"
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "ShardedFilename"
        input_arg {
          name: "basename"
          type: DT_STRING
        }
        input_arg {
          name: "shard"
          type: DT_INT32
        }
        input_arg {
          name: "num_shards"
          type: DT_INT32
        }
        output_arg {
          name: "filename"
          type: DT_STRING
        }
      }
      op {
        name: "Size"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        output_arg {
          name: "output"
          type_attr: "out_type"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "out_type"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Slice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "size"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Softmax"
        input_arg {
          name: "logits"
          type_attr: "T"
        }
        output_arg {
          name: "softmax"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_HALF
              type: DT_BFLOAT16
              type: DT_FLOAT
              type: DT_DOUBLE
            }
          }
        }
      }
      op {
        name: "Sqrt"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Square"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        output_arg {
          name: "y"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "StridedSlice"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "begin"
          type_attr: "Index"
        }
        input_arg {
          name: "end"
          type_attr: "Index"
        }
        input_arg {
          name: "strides"
          type_attr: "Index"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Index"
          type: "type"
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
        attr {
          name: "begin_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "end_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "ellipsis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "new_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
        attr {
          name: "shrink_axis_mask"
          type: "int"
          default_value {
            i: 0
          }
        }
      }
      op {
        name: "StringJoin"
        input_arg {
          name: "inputs"
          type: DT_STRING
          number_attr: "N"
        }
        output_arg {
          name: "output"
          type: DT_STRING
        }
        attr {
          name: "N"
          type: "int"
          has_minimum: true
          minimum: 1
        }
        attr {
          name: "separator"
          type: "string"
          default_value {
            s: ""
          }
        }
      }
      op {
        name: "Sub"
        input_arg {
          name: "x"
          type_attr: "T"
        }
        input_arg {
          name: "y"
          type_attr: "T"
        }
        output_arg {
          name: "z"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_BFLOAT16
              type: DT_HALF
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_UINT8
              type: DT_INT8
              type: DT_UINT16
              type: DT_INT16
              type: DT_INT32
              type: DT_INT64
              type: DT_COMPLEX64
              type: DT_COMPLEX128
            }
          }
        }
      }
      op {
        name: "Sum"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "reduction_indices"
          type_attr: "Tidx"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "keep_dims"
          type: "bool"
          default_value {
            b: false
          }
        }
        attr {
          name: "T"
          type: "type"
          allowed_values {
            list {
              type: DT_FLOAT
              type: DT_DOUBLE
              type: DT_INT32
              type: DT_UINT8
              type: DT_INT16
              type: DT_INT8
              type: DT_COMPLEX64
              type: DT_INT64
              type: DT_QINT8
              type: DT_QUINT8
              type: DT_QINT32
              type: DT_BFLOAT16
              type: DT_UINT16
              type: DT_COMPLEX128
              type: DT_HALF
              type: DT_UINT32
              type: DT_UINT64
            }
          }
        }
        attr {
          name: "Tidx"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "Switch"
        input_arg {
          name: "data"
          type_attr: "T"
        }
        input_arg {
          name: "pred"
          type: DT_BOOL
        }
        output_arg {
          name: "output_false"
          type_attr: "T"
        }
        output_arg {
          name: "output_true"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
      }
      op {
        name: "Tile"
        input_arg {
          name: "input"
          type_attr: "T"
        }
        input_arg {
          name: "multiples"
          type_attr: "Tmultiples"
        }
        output_arg {
          name: "output"
          type_attr: "T"
        }
        attr {
          name: "T"
          type: "type"
        }
        attr {
          name: "Tmultiples"
          type: "type"
          default_value {
            type: DT_INT32
          }
          allowed_values {
            list {
              type: DT_INT32
              type: DT_INT64
            }
          }
        }
      }
      op {
        name: "VarHandleOp"
        output_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        attr {
          name: "container"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "shared_name"
          type: "string"
          default_value {
            s: ""
          }
        }
        attr {
          name: "dtype"
          type: "type"
        }
        attr {
          name: "shape"
          type: "shape"
        }
        is_stateful: true
      }
      op {
        name: "VarIsInitializedOp"
        input_arg {
          name: "resource"
          type: DT_RESOURCE
        }
        output_arg {
          name: "is_initialized"
          type: DT_BOOL
        }
        is_stateful: true
      }
    }
    tags: "serve"
    tensorflow_version: "1.12.0"
    tensorflow_git_version: "v1.12.0-rc2-3-ga6d8ffae09"
  }
  graph_def {
    node {
      name: "input_1"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 28
            }
            dim {
              size: 28
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000 \000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.14213381707668304
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.14213381707668304
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv1/kernel/Initializer/random_uniform/max"
      input: "conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv1/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv1/kernel/Initializer/random_uniform/mul"
      input: "conv1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "conv1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1/kernel"
        }
      }
    }
    node {
      name: "conv1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv1/kernel"
      input: "conv1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv1/bias"
        }
      }
    }
    node {
      name: "conv1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv1/bias/Assign"
      op: "AssignVariableOp"
      input: "conv1/bias"
      input: "conv1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv1/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1/Conv2D"
      op: "Conv2D"
      input: "input_1"
      input: "conv1/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv1/BiasAdd"
      op: "BiasAdd"
      input: "conv1/Conv2D"
      input: "conv1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv1/Relu"
      op: "Relu"
      input: "conv1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0833333358168602
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0833333358168602
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv2_1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv2_1/kernel/Initializer/random_uniform/max"
      input: "conv2_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv2_1/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv2_1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv2_1/kernel/Initializer/random_uniform/mul"
      input: "conv2_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2_1/kernel"
        }
      }
    }
    node {
      name: "conv2_1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2_1/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv2_1/kernel"
      input: "conv2_1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv2_1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2_1/bias"
        }
      }
    }
    node {
      name: "conv2_1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2_1/bias/Assign"
      op: "AssignVariableOp"
      input: "conv2_1/bias"
      input: "conv2_1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2_1/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_1/Conv2D"
      op: "Conv2D"
      input: "conv1/Relu"
      input: "conv2_1/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv2_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_1/BiasAdd"
      op: "BiasAdd"
      input: "conv2_1/Conv2D"
      input: "conv2_1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv2_1/Relu"
      op: "Relu"
      input: "conv2_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "maxpool2_1/MaxPool"
      op: "MaxPool"
      input: "conv2_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.0833333358168602
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0833333358168602
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv2_2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv2_2/kernel/Initializer/random_uniform/max"
      input: "conv2_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv2_2/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv2_2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv2_2/kernel/Initializer/random_uniform/mul"
      input: "conv2_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2_2/kernel"
        }
      }
    }
    node {
      name: "conv2_2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2_2/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv2_2/kernel"
      input: "conv2_2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv2_2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv2_2/bias"
        }
      }
    }
    node {
      name: "conv2_2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv2_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv2_2/bias/Assign"
      op: "AssignVariableOp"
      input: "conv2_2/bias"
      input: "conv2_2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_2/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv2_2/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_2/Conv2D"
      op: "Conv2D"
      input: "conv1/Relu"
      input: "conv2_2/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv2_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv2_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv2_2/BiasAdd"
      op: "BiasAdd"
      input: "conv2_2/Conv2D"
      input: "conv2_2/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv2_2/Relu"
      op: "Relu"
      input: "conv2_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "maxpool2_2/MaxPool"
      op: "MaxPool"
      input: "conv2_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.04564354568719864
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.04564354568719864
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv3_1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv3_1/kernel/Initializer/random_uniform/max"
      input: "conv3_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv3_1/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv3_1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv3_1/kernel/Initializer/random_uniform/mul"
      input: "conv3_1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv3_1/kernel"
        }
      }
    }
    node {
      name: "conv3_1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv3_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv3_1/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv3_1/kernel"
      input: "conv3_1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_1/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv3_1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv3_1/bias"
        }
      }
    }
    node {
      name: "conv3_1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv3_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv3_1/bias/Assign"
      op: "AssignVariableOp"
      input: "conv3_1/bias"
      input: "conv3_1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_1/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv3_1/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_1/Conv2D"
      op: "Conv2D"
      input: "maxpool2_1/MaxPool"
      input: "conv3_1/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv3_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_1/BiasAdd"
      op: "BiasAdd"
      input: "conv3_1/Conv2D"
      input: "conv3_1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv3_1/Relu"
      op: "Relu"
      input: "conv3_1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "maxpool3_1/MaxPool"
      op: "MaxPool"
      input: "conv3_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
              dim {
                size: 7
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.04564354568719864
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.04564354568719864
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "conv3_2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "conv3_2/kernel/Initializer/random_uniform/max"
      input: "conv3_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "conv3_2/kernel/Initializer/random_uniform/RandomUniform"
      input: "conv3_2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "conv3_2/kernel/Initializer/random_uniform/mul"
      input: "conv3_2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv3_2/kernel"
        }
      }
    }
    node {
      name: "conv3_2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv3_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv3_2/kernel/Assign"
      op: "AssignVariableOp"
      input: "conv3_2/kernel"
      input: "conv3_2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "conv3_2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "conv3_2/bias"
        }
      }
    }
    node {
      name: "conv3_2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "conv3_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "conv3_2/bias/Assign"
      op: "AssignVariableOp"
      input: "conv3_2/bias"
      input: "conv3_2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_2/dilation_rate"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "conv3_2/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_2/Conv2D"
      op: "Conv2D"
      input: "maxpool2_2/MaxPool"
      input: "conv3_2/Conv2D/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "conv3_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "conv3_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "conv3_2/BiasAdd"
      op: "BiasAdd"
      input: "conv3_2/Conv2D"
      input: "conv3_2/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "conv3_2/Relu"
      op: "Relu"
      input: "conv3_2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "maxpool3_2/MaxPool"
      op: "MaxPool"
      input: "conv3_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
              dim {
                size: 7
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "c3/concat/axis"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node {
      name: "c3/concat"
      op: "ConcatV2"
      input: "maxpool3_1/MaxPool"
      input: "maxpool3_2/MaxPool"
      input: "c3/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
              dim {
                size: 7
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "flatten/Shape"
      op: "Shape"
      input: "c3/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "flatten/strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "flatten/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "flatten/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "flatten/strided_slice"
      op: "StridedSlice"
      input: "flatten/Shape"
      input: "flatten/strided_slice/stack"
      input: "flatten/strided_slice/stack_1"
      input: "flatten/strided_slice/stack_2"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node {
      name: "flatten/Reshape/shape/1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "flatten/Reshape/shape"
      op: "Pack"
      input: "flatten/strided_slice"
      input: "flatten/Reshape/shape/1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "flatten/Reshape"
      op: "Reshape"
      input: "c3/concat"
      input: "flatten/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 25088
              }
            }
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000b\000\000\350\003\000\000"
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.015165447257459164
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.015165447257459164
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "fc1/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "fc1/kernel/Initializer/random_uniform/max"
      input: "fc1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "fc1/kernel/Initializer/random_uniform/RandomUniform"
      input: "fc1/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Initializer/random_uniform"
      op: "Add"
      input: "fc1/kernel/Initializer/random_uniform/mul"
      input: "fc1/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "fc1/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 25088
            }
            dim {
              size: 1000
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "fc1/kernel"
        }
      }
    }
    node {
      name: "fc1/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "fc1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fc1/kernel/Assign"
      op: "AssignVariableOp"
      input: "fc1/kernel"
      input: "fc1/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc1/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc1/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc1/bias/Initializer/zeros/shape_as_tensor"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1000
          }
        }
      }
    }
    node {
      name: "fc1/bias/Initializer/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fc1/bias/Initializer/zeros"
      op: "Fill"
      input: "fc1/bias/Initializer/zeros/shape_as_tensor"
      input: "fc1/bias/Initializer/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "fc1/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1000
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "fc1/bias"
        }
      }
    }
    node {
      name: "fc1/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "fc1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fc1/bias/Assign"
      op: "AssignVariableOp"
      input: "fc1/bias"
      input: "fc1/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc1/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc1/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc1/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc1/MatMul"
      op: "MatMul"
      input: "flatten/Reshape"
      input: "fc1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "fc1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc1/BiasAdd"
      op: "BiasAdd"
      input: "fc1/MatMul"
      input: "fc1/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "fc1/Relu"
      op: "Relu"
      input: "fc1/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\350\003\000\000\364\001\000\000"
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.06324554979801178
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.06324554979801178
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "fc2/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "fc2/kernel/Initializer/random_uniform/max"
      input: "fc2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "fc2/kernel/Initializer/random_uniform/RandomUniform"
      input: "fc2/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Initializer/random_uniform"
      op: "Add"
      input: "fc2/kernel/Initializer/random_uniform/mul"
      input: "fc2/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "fc2/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 500
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "fc2/kernel"
        }
      }
    }
    node {
      name: "fc2/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "fc2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fc2/kernel/Assign"
      op: "AssignVariableOp"
      input: "fc2/kernel"
      input: "fc2/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc2/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc2/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc2/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 500
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "fc2/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 500
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "fc2/bias"
        }
      }
    }
    node {
      name: "fc2/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "fc2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "fc2/bias/Assign"
      op: "AssignVariableOp"
      input: "fc2/bias"
      input: "fc2/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc2/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc2/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc2/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc2/MatMul"
      op: "MatMul"
      input: "fc1/Relu"
      input: "fc2/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "fc2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "fc2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "fc2/BiasAdd"
      op: "BiasAdd"
      input: "fc2/MatMul"
      input: "fc2/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "fc2/Relu"
      op: "Relu"
      input: "fc2/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\364\001\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform/min"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: -0.10846523195505142
          }
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform/max"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.10846523195505142
          }
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "dense/kernel/Initializer/random_uniform/shape"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform/sub"
      op: "Sub"
      input: "dense/kernel/Initializer/random_uniform/max"
      input: "dense/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform/mul"
      op: "Mul"
      input: "dense/kernel/Initializer/random_uniform/RandomUniform"
      input: "dense/kernel/Initializer/random_uniform/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "dense/kernel/Initializer/random_uniform"
      op: "Add"
      input: "dense/kernel/Initializer/random_uniform/mul"
      input: "dense/kernel/Initializer/random_uniform/min"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "dense/kernel"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 500
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense/kernel"
        }
      }
    }
    node {
      name: "dense/kernel/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense/kernel/Assign"
      op: "AssignVariableOp"
      input: "dense/kernel"
      input: "dense/kernel/Initializer/random_uniform"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense/kernel/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense/kernel"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/kernel"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense/bias/Initializer/zeros"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "dense/bias"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "dense/bias"
        }
      }
    }
    node {
      name: "dense/bias/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "dense/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "dense/bias/Assign"
      op: "AssignVariableOp"
      input: "dense/bias"
      input: "dense/bias/Initializer/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/bias"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense/bias/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense/bias"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/bias"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense/MatMul/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense/MatMul"
      op: "MatMul"
      input: "fc2/Relu"
      input: "dense/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "dense/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "dense/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "dense/BiasAdd"
      op: "BiasAdd"
      input: "dense/MatMul"
      input: "dense/BiasAdd/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "dense/Softmax"
      op: "Softmax"
      input: "dense/BiasAdd"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/lr/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/lr"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "Adadelta/lr"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/lr"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/lr"
        }
      }
    }
    node {
      name: "Adadelta/lr/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/lr/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/lr"
      input: "Adadelta/lr/Initializer/initial_value"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/lr"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/lr/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/lr"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/decay/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "Adadelta/decay"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/decay"
        }
      }
    }
    node {
      name: "Adadelta/decay/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/decay/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/decay"
      input: "Adadelta/decay/Initializer/initial_value"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/decay/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/decay"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/decay"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "Adadelta/iterations/Initializer/initial_value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iterations"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node {
      name: "Adadelta/iterations"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iterations"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "shape"
        value {
          shape {
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "Adadelta/iterations"
        }
      }
    }
    node {
      name: "Adadelta/iterations/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "Adadelta/iterations"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "Adadelta/iterations/Assign"
      op: "AssignVariableOp"
      input: "Adadelta/iterations"
      input: "Adadelta/iterations/Initializer/initial_value"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iterations"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "Adadelta/iterations/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/iterations"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@Adadelta/iterations"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "dense_target"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 1
              }
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "dense_sample_weights"
      op: "PlaceholderWithDefault"
      input: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Sum"
      op: "Sum"
      input: "dense/Softmax"
      input: "loss/dense_loss/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/dense_loss/truediv"
      op: "RealDiv"
      input: "dense/Softmax"
      input: "loss/dense_loss/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/sub/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/sub"
      op: "Sub"
      input: "loss/dense_loss/sub/x"
      input: "loss/dense_loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/clip_by_value/Minimum"
      op: "Minimum"
      input: "loss/dense_loss/truediv"
      input: "loss/dense_loss/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/clip_by_value"
      op: "Maximum"
      input: "loss/dense_loss/clip_by_value/Minimum"
      input: "loss/dense_loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Log"
      op: "Log"
      input: "loss/dense_loss/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/mul"
      op: "Mul"
      input: "dense_target"
      input: "loss/dense_loss/Log"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Sum_1/reduction_indices"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Sum_1"
      op: "Sum"
      input: "loss/dense_loss/mul"
      input: "loss/dense_loss/Sum_1/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_loss/Neg"
      op: "Neg"
      input: "loss/dense_loss/Sum_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape"
      op: "Shape"
      input: "dense_sample_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/weights/rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/values/shape"
      op: "Shape"
      input: "loss/dense_loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/values/rank"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
      op: "Equal"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar/x"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/weights/rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch:1"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      op: "Equal"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/values/rank"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/values/rank"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/weights/rank"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/weights/rank"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
      op: "ExpandDims"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/values/shape"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/values/shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/values/shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
      op: "Fill"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
      op: "ConcatV2"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
      op: "ExpandDims"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation"
      op: "DenseToDenseSetOperation"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 2
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "set_operation"
        value {
          s: "a-b"
        }
      }
      attr {
        key: "validate_indices"
        value {
          b: true
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
      op: "Size"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
      op: "Equal"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
      op: "Merge"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      op: "Merge"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "weights can not be broadcast to values."
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "weights.shape="
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dense_sample_weights:0"
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "values.shape="
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/dense_loss/Neg:0"
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "is_scalar="
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch:1"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp"
      op: "NoOp"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "weights can not be broadcast to values."
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "weights.shape="
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "dense_sample_weights:0"
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "values.shape="
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "loss/dense_loss/Neg:0"
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "is_scalar="
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert"
      op: "Assert"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3"
      attr {
        key: "T"
        value {
          list {
            type: DT_STRING
            type: DT_STRING
            type: DT_STRING
            type: DT_INT32
            type: DT_STRING
            type: DT_STRING
            type: DT_INT32
            type: DT_STRING
            type: DT_BOOL
          }
        }
      }
      attr {
        key: "summarize"
        value {
          i: 3
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/values/shape"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/values/shape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3"
      op: "Switch"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1"
      op: "Identity"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
      op: "Merge"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1"
      input: "loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/ones_like/Shape"
      op: "Shape"
      input: "loss/dense_loss/Neg"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/ones_like/Const"
      op: "Const"
      input: "^loss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights/ones_like"
      op: "Fill"
      input: "loss/dense_loss/broadcast_weights/ones_like/Shape"
      input: "loss/dense_loss/broadcast_weights/ones_like/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "loss/dense_loss/broadcast_weights"
      op: "Mul"
      input: "dense_sample_weights"
      input: "loss/dense_loss/broadcast_weights/ones_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Mul_1"
      op: "Mul"
      input: "loss/dense_loss/Neg"
      input: "loss/dense_loss/broadcast_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Sum_2"
      op: "Sum"
      input: "loss/dense_loss/Mul_1"
      input: "loss/dense_loss/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_loss/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Sum_3"
      op: "Sum"
      input: "loss/dense_loss/broadcast_weights"
      input: "loss/dense_loss/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/dense_loss/truediv_1"
      op: "RealDiv"
      input: "loss/dense_loss/Sum_2"
      input: "loss/dense_loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/zeros_like"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Greater"
      op: "Greater"
      input: "loss/dense_loss/Sum_3"
      input: "loss/dense_loss/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Select"
      op: "Select"
      input: "loss/dense_loss/Greater"
      input: "loss/dense_loss/truediv_1"
      input: "loss/dense_loss/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "loss/dense_loss/Mean"
      op: "Mean"
      input: "loss/dense_loss/Select"
      input: "loss/dense_loss/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "loss/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "loss/mul"
      op: "Mul"
      input: "loss/mul/x"
      input: "loss/dense_loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax"
      op: "ArgMax"
      input: "dense_target"
      input: "metrics/acc/ArgMax/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax_1/dimension"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "metrics/acc/ArgMax_1"
      op: "ArgMax"
      input: "dense/Softmax"
      input: "metrics/acc/ArgMax_1/dimension"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_type"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "metrics/acc/Equal"
      op: "Equal"
      input: "metrics/acc/ArgMax"
      input: "metrics/acc/ArgMax_1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/Cast"
      op: "Cast"
      input: "metrics/acc/Equal"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "metrics/acc/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "metrics/acc/Mean"
      op: "Mean"
      input: "metrics/acc/Cast"
      input: "metrics/acc/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/grad_ys_0"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/Fill"
      op: "Fill"
      input: "training/Adadelta/gradients/Shape"
      input: "training/Adadelta/gradients/grad_ys_0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/mul_grad/Mul"
      op: "Mul"
      input: "training/Adadelta/gradients/Fill"
      input: "loss/dense_loss/Mean"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/mul_grad/Mul_1"
      op: "Mul"
      input: "training/Adadelta/gradients/Fill"
      input: "loss/mul/x"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/mul_grad/Mul_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Tile"
      op: "Tile"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Const_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/truediv"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Tile"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mean"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Select_grad/zeros_like"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Select_grad/Select"
      op: "Select"
      input: "loss/dense_loss/Greater"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/truediv"
      input: "training/Adadelta/gradients/loss/dense_loss/Select_grad/zeros_like"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Select_grad/Select_1"
      op: "Select"
      input: "loss/dense_loss/Greater"
      input: "training/Adadelta/gradients/loss/dense_loss/Select_grad/zeros_like"
      input: "training/Adadelta/gradients/loss/dense_loss/Mean_grad/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Select"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/RealDiv"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/Select_grad/Select"
      input: "loss/dense_loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Neg"
      op: "Neg"
      input: "loss/dense_loss/Sum_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/RealDiv_1"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Neg"
      input: "loss/dense_loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/RealDiv_2"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/RealDiv_1"
      input: "loss/dense_loss/Sum_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/mul"
      op: "Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/Select_grad/Select"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Sum_1"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/mul"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Sum_1"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Reshape/shape"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_1_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Reshape/shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Shape"
      op: "Shape"
      input: "loss/dense_loss/Mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Tile"
      op: "Tile"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Shape"
      op: "Shape"
      input: "loss/dense_loss/Neg"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_loss/broadcast_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Mul"
      op: "Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Tile"
      input: "loss/dense_loss/broadcast_weights"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Mul_1"
      op: "Mul"
      input: "loss/dense_loss/Neg"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_2_grad/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Sum_1"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Mul_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Sum_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Mul_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Neg_grad/Neg"
      op: "Neg"
      input: "training/Adadelta/gradients/loss/dense_loss/Mul_1_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Neg"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Shape"
      op: "Shape"
      input: "loss/dense_loss/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/add"
      op: "Add"
      input: "loss/dense_loss/Sum_1/reduction_indices"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/mod"
      op: "FloorMod"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/add"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/range"
      op: "Range"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/range/start"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Size"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Fill"
      op: "Fill"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Shape_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/range"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/mod"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Maximum"
      op: "Maximum"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/DynamicStitch"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/floordiv"
      op: "FloorDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Neg_grad/Neg"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Tile"
      op: "Tile"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Shape"
      op: "Shape"
      input: "dense_target"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_loss/Log"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Mul"
      op: "Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Tile"
      input: "loss/dense_loss/Log"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Mul_1"
      op: "Mul"
      input: "dense_target"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_1_grad/Tile"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Sum_1"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Mul_1"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Sum_1"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/mul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Log_grad/Reciprocal"
      op: "Reciprocal"
      input: "loss/dense_loss/clip_by_value"
      input: "^training/Adadelta/gradients/loss/dense_loss/mul_grad/Reshape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Log"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Log_grad/mul"
      op: "Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/mul_grad/Reshape_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Log_grad/Reciprocal"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Log"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape"
      op: "Shape"
      input: "loss/dense_loss/clip_by_value/Minimum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape_2"
      op: "Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/Log_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/zeros"
      op: "Fill"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape_2"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/GreaterEqual"
      op: "GreaterEqual"
      input: "loss/dense_loss/clip_by_value/Minimum"
      input: "loss/dense_loss/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Select"
      op: "Select"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/GreaterEqual"
      input: "training/Adadelta/gradients/loss/dense_loss/Log_grad/mul"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Select_1"
      op: "Select"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/GreaterEqual"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/zeros"
      input: "training/Adadelta/gradients/loss/dense_loss/Log_grad/mul"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Select"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Sum_1"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Select_1"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Sum_1"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape"
      op: "Shape"
      input: "loss/dense_loss/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape_2"
      op: "Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/zeros/Const"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/zeros"
      op: "Fill"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape_2"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/zeros/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/LessEqual"
      op: "LessEqual"
      input: "loss/dense_loss/truediv"
      input: "loss/dense_loss/sub"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Select"
      op: "Select"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/LessEqual"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/zeros"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Select_1"
      op: "Select"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/LessEqual"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/zeros"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value_grad/Reshape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Select"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Sum_1"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Select_1"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Sum_1"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/clip_by_value/Minimum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Shape"
      op: "Shape"
      input: "dense/Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Shape_1"
      op: "Shape"
      input: "loss/dense_loss/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/BroadcastGradientArgs"
      op: "BroadcastGradientArgs"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/RealDiv"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Reshape"
      input: "loss/dense_loss/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/BroadcastGradientArgs"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Neg"
      op: "Neg"
      input: "dense/Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/RealDiv_1"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Neg"
      input: "loss/dense_loss/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/RealDiv_2"
      op: "RealDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/RealDiv_1"
      input: "loss/dense_loss/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/mul"
      op: "Mul"
      input: "training/Adadelta/gradients/loss/dense_loss/clip_by_value/Minimum_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/RealDiv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Sum_1"
      op: "Sum"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/mul"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/BroadcastGradientArgs:1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Reshape_1"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Sum_1"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Shape_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Shape"
      op: "Shape"
      input: "dense/Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Size"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/add"
      op: "Add"
      input: "loss/dense_loss/Sum/reduction_indices"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/mod"
      op: "FloorMod"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/add"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Size"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Shape_1"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/range/start"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/range/delta"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/range"
      op: "Range"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/range/start"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Size"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/range/delta"
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Fill/value"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Fill"
      op: "Fill"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Shape_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Fill/value"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/DynamicStitch"
      op: "DynamicStitch"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/range"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/mod"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Fill"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Maximum/y"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Maximum"
      op: "Maximum"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/DynamicStitch"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Maximum/y"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/floordiv"
      op: "FloorDiv"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Shape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Maximum"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Reshape_1"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/DynamicStitch"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Tile"
      op: "Tile"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/floordiv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tmultiples"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/Sum"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/AddN"
      op: "AddN"
      input: "training/Adadelta/gradients/loss/dense_loss/truediv_grad/Reshape"
      input: "training/Adadelta/gradients/loss/dense_loss/Sum_grad/Tile"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@loss/dense_loss/truediv"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/Softmax_grad/mul"
      op: "Mul"
      input: "training/Adadelta/gradients/AddN"
      input: "dense/Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/Softmax"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/Softmax_grad/Sum/reduction_indices"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/Softmax"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/Softmax_grad/Sum"
      op: "Sum"
      input: "training/Adadelta/gradients/dense/Softmax_grad/mul"
      input: "training/Adadelta/gradients/dense/Softmax_grad/Sum/reduction_indices"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/Softmax"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/Softmax_grad/sub"
      op: "Sub"
      input: "training/Adadelta/gradients/AddN"
      input: "training/Adadelta/gradients/dense/Softmax_grad/Sum"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/Softmax"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/Softmax_grad/mul_1"
      op: "Mul"
      input: "training/Adadelta/gradients/dense/Softmax_grad/sub"
      input: "dense/Softmax"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/Softmax"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/dense/Softmax_grad/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/MatMul_grad/MatMul"
      op: "MatMul"
      input: "training/Adadelta/gradients/dense/Softmax_grad/mul_1"
      input: "dense/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/dense/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "fc2/Relu"
      input: "training/Adadelta/gradients/dense/Softmax_grad/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@dense/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc2/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/dense/MatMul_grad/MatMul"
      input: "fc2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc2/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/fc2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc2/MatMul_grad/MatMul"
      op: "MatMul"
      input: "training/Adadelta/gradients/fc2/Relu_grad/ReluGrad"
      input: "fc2/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc2/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "fc1/Relu"
      input: "training/Adadelta/gradients/fc2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc2/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/fc2/MatMul_grad/MatMul"
      input: "fc1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/fc1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc1/MatMul_grad/MatMul"
      op: "MatMul"
      input: "training/Adadelta/gradients/fc1/Relu_grad/ReluGrad"
      input: "fc1/MatMul/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 25088
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: false
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/fc1/MatMul_grad/MatMul_1"
      op: "MatMul"
      input: "flatten/Reshape"
      input: "training/Adadelta/gradients/fc1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@fc1/MatMul"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "transpose_a"
        value {
          b: true
        }
      }
      attr {
        key: "transpose_b"
        value {
          b: false
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/flatten/Reshape_grad/Shape"
      op: "Shape"
      input: "c3/concat"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@flatten/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/flatten/Reshape_grad/Reshape"
      op: "Reshape"
      input: "training/Adadelta/gradients/fc1/MatMul_grad/MatMul"
      input: "training/Adadelta/gradients/flatten/Reshape_grad/Shape"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@flatten/Reshape"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
              dim {
                size: 7
              }
              dim {
                size: 512
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/Rank"
      op: "Const"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 4
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/mod"
      op: "FloorMod"
      input: "c3/concat/axis"
      input: "training/Adadelta/gradients/c3/concat_grad/Rank"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/Shape"
      op: "Shape"
      input: "maxpool3_1/MaxPool"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/ShapeN"
      op: "ShapeN"
      input: "maxpool3_1/MaxPool"
      input: "maxpool3_2/MaxPool"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/ConcatOffset"
      op: "ConcatOffset"
      input: "training/Adadelta/gradients/c3/concat_grad/mod"
      input: "training/Adadelta/gradients/c3/concat_grad/ShapeN"
      input: "training/Adadelta/gradients/c3/concat_grad/ShapeN:1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/Slice"
      op: "Slice"
      input: "training/Adadelta/gradients/flatten/Reshape_grad/Reshape"
      input: "training/Adadelta/gradients/c3/concat_grad/ConcatOffset"
      input: "training/Adadelta/gradients/c3/concat_grad/ShapeN"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
              dim {
                size: 7
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/c3/concat_grad/Slice_1"
      op: "Slice"
      input: "training/Adadelta/gradients/flatten/Reshape_grad/Reshape"
      input: "training/Adadelta/gradients/c3/concat_grad/ConcatOffset:1"
      input: "training/Adadelta/gradients/c3/concat_grad/ShapeN:1"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@c3/concat"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 7
              }
              dim {
                size: 7
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/maxpool3_1/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "conv3_1/Relu"
      input: "maxpool3_1/MaxPool"
      input: "training/Adadelta/gradients/c3/concat_grad/Slice"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@maxpool3_1/MaxPool"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/maxpool3_2/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "conv3_2/Relu"
      input: "maxpool3_2/MaxPool"
      input: "training/Adadelta/gradients/c3/concat_grad/Slice_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@maxpool3_2/MaxPool"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/maxpool3_1/MaxPool_grad/MaxPoolGrad"
      input: "conv3_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_2/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/maxpool3_2/MaxPool_grad/MaxPoolGrad"
      input: "conv3_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/conv3_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_2/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/conv3_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_1/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "maxpool2_1/MaxPool"
      input: "conv3_1/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_1/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adadelta/gradients/conv3_1/Conv2D_grad/ShapeN"
      input: "conv3_1/Conv2D/ReadVariableOp"
      input: "training/Adadelta/gradients/conv3_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "maxpool2_1/MaxPool"
      input: "training/Adadelta/gradients/conv3_1/Conv2D_grad/ShapeN:1"
      input: "training/Adadelta/gradients/conv3_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_2/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "maxpool2_2/MaxPool"
      input: "conv3_2/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_2/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adadelta/gradients/conv3_2/Conv2D_grad/ShapeN"
      input: "conv3_2/Conv2D/ReadVariableOp"
      input: "training/Adadelta/gradients/conv3_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 14
              }
              dim {
                size: 14
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "maxpool2_2/MaxPool"
      input: "training/Adadelta/gradients/conv3_2/Conv2D_grad/ShapeN:1"
      input: "training/Adadelta/gradients/conv3_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv3_2/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/maxpool2_1/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "conv2_1/Relu"
      input: "maxpool2_1/MaxPool"
      input: "training/Adadelta/gradients/conv3_1/Conv2D_grad/Conv2DBackpropInput"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@maxpool2_1/MaxPool"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/maxpool2_2/MaxPool_grad/MaxPoolGrad"
      op: "MaxPoolGrad"
      input: "conv2_2/Relu"
      input: "maxpool2_2/MaxPool"
      input: "training/Adadelta/gradients/conv3_2/Conv2D_grad/Conv2DBackpropInput"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@maxpool2_2/MaxPool"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "ksize"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/maxpool2_1/MaxPool_grad/MaxPoolGrad"
      input: "conv2_1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_2/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/maxpool2_2/MaxPool_grad/MaxPoolGrad"
      input: "conv2_2/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/conv2_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_2/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/conv2_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_1/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "conv1/Relu"
      input: "conv2_1/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_1/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adadelta/gradients/conv2_1/Conv2D_grad/ShapeN"
      input: "conv2_1/Conv2D/ReadVariableOp"
      input: "training/Adadelta/gradients/conv2_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1/Relu"
      input: "training/Adadelta/gradients/conv2_1/Conv2D_grad/ShapeN:1"
      input: "training/Adadelta/gradients/conv2_1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_2/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "conv1/Relu"
      input: "conv2_2/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_2/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adadelta/gradients/conv2_2/Conv2D_grad/ShapeN"
      input: "conv2_2/Conv2D/ReadVariableOp"
      input: "training/Adadelta/gradients/conv2_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "conv1/Relu"
      input: "training/Adadelta/gradients/conv2_2/Conv2D_grad/ShapeN:1"
      input: "training/Adadelta/gradients/conv2_2/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_2/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/AddN_1"
      op: "AddN"
      input: "training/Adadelta/gradients/conv2_1/Conv2D_grad/Conv2DBackpropInput"
      input: "training/Adadelta/gradients/conv2_2/Conv2D_grad/Conv2DBackpropInput"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv2_1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv1/Relu_grad/ReluGrad"
      op: "ReluGrad"
      input: "training/Adadelta/gradients/AddN_1"
      input: "conv1/Relu"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/Relu"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv1/BiasAdd_grad/BiasAddGrad"
      op: "BiasAddGrad"
      input: "training/Adadelta/gradients/conv1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/BiasAdd"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv1/Conv2D_grad/ShapeN"
      op: "ShapeN"
      input: "input_1"
      input: "conv1/Conv2D/ReadVariableOp"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv1/Conv2D_grad/Conv2DBackpropInput"
      op: "Conv2DBackpropInput"
      input: "training/Adadelta/gradients/conv1/Conv2D_grad/ShapeN"
      input: "conv1/Conv2D/ReadVariableOp"
      input: "training/Adadelta/gradients/conv1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
      op: "Conv2DBackpropFilter"
      input: "input_1"
      input: "training/Adadelta/gradients/conv1/Conv2D_grad/ShapeN:1"
      input: "training/Adadelta/gradients/conv1/Relu_grad/ReluGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@conv1/Conv2D"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node {
      name: "training/Adadelta/zeros"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable"
      input: "training/Adadelta/zeros"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_1"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_1"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_1/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_1/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_1"
      input: "training/Adadelta/zeros_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_1"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_1/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_1"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_1"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_2/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_2/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_2"
      op: "Fill"
      input: "training/Adadelta/zeros_2/shape_as_tensor"
      input: "training/Adadelta/zeros_2/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_2"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_2"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_2/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_2/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_2"
      input: "training/Adadelta/zeros_2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_2"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_2/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_2"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_2"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_3"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_3"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_3/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_3/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_3"
      input: "training/Adadelta/zeros_3"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_3"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_3/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_3"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_3"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_4/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_4/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_4"
      op: "Fill"
      input: "training/Adadelta/zeros_4/shape_as_tensor"
      input: "training/Adadelta/zeros_4/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_4"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_4"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_4/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_4/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_4"
      input: "training/Adadelta/zeros_4"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_4"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_4/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_4"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_4"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_5"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_5"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_5/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_5/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_5"
      input: "training/Adadelta/zeros_5"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_5"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_5/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_5"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_5"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_6/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_6/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_6"
      op: "Fill"
      input: "training/Adadelta/zeros_6/shape_as_tensor"
      input: "training/Adadelta/zeros_6/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_6"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_6"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_6/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_6/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_6"
      input: "training/Adadelta/zeros_6"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_6"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_6/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_6"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_6"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_7"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_7"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_7"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_7/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_7/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_7"
      input: "training/Adadelta/zeros_7"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_7"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_7/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_7"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_7"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_8/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_8/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_8"
      op: "Fill"
      input: "training/Adadelta/zeros_8/shape_as_tensor"
      input: "training/Adadelta/zeros_8/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_8"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_8"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_8/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_8/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_8"
      input: "training/Adadelta/zeros_8"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_8"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_8/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_8"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_8"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_9"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_9"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_9"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_9/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_9/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_9"
      input: "training/Adadelta/zeros_9"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_9"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_9/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_9"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_9"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_10/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000b\000\000\350\003\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_10/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_10"
      op: "Fill"
      input: "training/Adadelta/zeros_10/shape_as_tensor"
      input: "training/Adadelta/zeros_10/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_10"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 25088
            }
            dim {
              size: 1000
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_10"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_10/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_10/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_10"
      input: "training/Adadelta/zeros_10"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_10"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_10/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_10"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_10"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_11/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1000
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_11/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_11"
      op: "Fill"
      input: "training/Adadelta/zeros_11/shape_as_tensor"
      input: "training/Adadelta/zeros_11/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_11"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1000
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_11"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_11/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_11/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_11"
      input: "training/Adadelta/zeros_11"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_11"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_11/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_11"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_11"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_12/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\350\003\000\000\364\001\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_12/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_12"
      op: "Fill"
      input: "training/Adadelta/zeros_12/shape_as_tensor"
      input: "training/Adadelta/zeros_12/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_12"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 500
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_12"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_12/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_12/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_12"
      input: "training/Adadelta/zeros_12"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_12"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_12/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_12"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_12"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_13"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 500
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_13"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 500
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_13"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_13/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_13/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_13"
      input: "training/Adadelta/zeros_13"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_13"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_13/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_13"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_13"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_14/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\364\001\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_14/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_14"
      op: "Fill"
      input: "training/Adadelta/zeros_14/shape_as_tensor"
      input: "training/Adadelta/zeros_14/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_14"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 500
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_14"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_14/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_14/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_14"
      input: "training/Adadelta/zeros_14"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_14"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_14/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_14"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_14"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_15"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_15"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_15"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_15/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_15/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_15"
      input: "training/Adadelta/zeros_15"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_15"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_15/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_15"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_15"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_16"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_16"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_16"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 1
            }
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_16"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_16/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_16/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_16"
      input: "training/Adadelta/zeros_16"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_16"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_16/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_16"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_16"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_17"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 32
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_17"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_17"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 32
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_17"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_17/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_17/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_17"
      input: "training/Adadelta/zeros_17"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_17"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_17/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_17"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_17"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_18/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_18/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_18"
      op: "Fill"
      input: "training/Adadelta/zeros_18/shape_as_tensor"
      input: "training/Adadelta/zeros_18/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_18"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_18"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_18"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_18/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_18/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_18"
      input: "training/Adadelta/zeros_18"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_18"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_18/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_18"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_18"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_19"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_19"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_19"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_19"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_19/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_19/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_19"
      input: "training/Adadelta/zeros_19"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_19"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_19/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_19"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_19"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_20/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000@\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_20/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_20"
      op: "Fill"
      input: "training/Adadelta/zeros_20/shape_as_tensor"
      input: "training/Adadelta/zeros_20/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_20"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_20"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 32
            }
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_20"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_20/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_20/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_20"
      input: "training/Adadelta/zeros_20"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_20"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_20/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_20"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_20"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_21"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 64
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_21"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_21"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 64
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_21"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_21/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_21/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_21"
      input: "training/Adadelta/zeros_21"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_21"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_21/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_21"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_21"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_22/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_22/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_22"
      op: "Fill"
      input: "training/Adadelta/zeros_22/shape_as_tensor"
      input: "training/Adadelta/zeros_22/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_22"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_22"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_22"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_22/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_22/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_22"
      input: "training/Adadelta/zeros_22"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_22"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_22/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_22"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_22"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_23"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_23"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_23"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_23"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_23/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_23/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_23"
      input: "training/Adadelta/zeros_23"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_23"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_23/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_23"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_23"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_24/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 4
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
            }
            tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\000\001\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_24/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_24"
      op: "Fill"
      input: "training/Adadelta/zeros_24/shape_as_tensor"
      input: "training/Adadelta/zeros_24/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_24"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_24"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 3
            }
            dim {
              size: 3
            }
            dim {
              size: 64
            }
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_24"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_24/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_24/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_24"
      input: "training/Adadelta/zeros_24"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_24"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_24/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_24"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_24"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_25"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 256
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_25"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_25"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 256
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_25"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_25/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_25"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_25/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_25"
      input: "training/Adadelta/zeros_25"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_25"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_25/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_25"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_25"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_26/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\000b\000\000\350\003\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_26/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_26"
      op: "Fill"
      input: "training/Adadelta/zeros_26/shape_as_tensor"
      input: "training/Adadelta/zeros_26/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_26"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_26"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 25088
            }
            dim {
              size: 1000
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_26"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_26/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_26"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_26/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_26"
      input: "training/Adadelta/zeros_26"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_26"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_26/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_26"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_26"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_27/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1000
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_27/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_27"
      op: "Fill"
      input: "training/Adadelta/zeros_27/shape_as_tensor"
      input: "training/Adadelta/zeros_27/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_27"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_27"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1000
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_27"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_27/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_27"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_27/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_27"
      input: "training/Adadelta/zeros_27"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_27"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_27/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_27"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_27"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_28/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\350\003\000\000\364\001\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_28/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_28"
      op: "Fill"
      input: "training/Adadelta/zeros_28/shape_as_tensor"
      input: "training/Adadelta/zeros_28/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_28"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_28"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 1000
            }
            dim {
              size: 500
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_28"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_28/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_28"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_28/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_28"
      input: "training/Adadelta/zeros_28"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_28"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_28/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_28"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_28"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_29"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 500
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_29"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_29"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 500
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_29"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_29/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_29"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_29/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_29"
      input: "training/Adadelta/zeros_29"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_29"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_29/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_29"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_29"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_30/shape_as_tensor"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 2
              }
            }
            tensor_content: "\364\001\000\000\n\000\000\000"
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_30/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_30"
      op: "Fill"
      input: "training/Adadelta/zeros_30/shape_as_tensor"
      input: "training/Adadelta/zeros_30/Const"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "index_type"
        value {
          type: DT_INT32
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_30"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_30"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 500
            }
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_30"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_30/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_30"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_30/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_30"
      input: "training/Adadelta/zeros_30"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_30"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_30/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_30"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_30"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/zeros_31"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
              dim {
                size: 10
              }
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_31"
      op: "VarHandleOp"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_31"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "container"
        value {
          s: ""
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: 10
            }
          }
        }
      }
      attr {
        key: "shared_name"
        value {
          s: "training/Adadelta/Variable_31"
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_31/IsInitialized/VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_31"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_31/Assign"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_31"
      input: "training/Adadelta/zeros_31"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_31"
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Variable_31/Read/ReadVariableOp"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_31"
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@training/Adadelta/Variable_31"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignAddVariableOp"
      op: "AssignAddVariableOp"
      input: "Adadelta/iterations"
      input: "training/Adadelta/Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp"
      op: "ReadVariableOp"
      input: "Adadelta/iterations"
      input: "^training/Adadelta/AssignAddVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_1"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul"
      op: "Mul"
      input: "training/Adadelta/mul/x"
      input: "training/Adadelta/ReadVariableOp_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square"
      op: "Square"
      input: "training/Adadelta/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_1/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_1"
      op: "Mul"
      input: "training/Adadelta/mul_1/x"
      input: "training/Adadelta/Square"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add"
      op: "Add"
      input: "training/Adadelta/mul"
      input: "training/Adadelta/mul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable"
      input: "training/Adadelta/add"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_2"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable"
      input: "^training/Adadelta/AssignVariableOp"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_3"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_1/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_1"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_3"
      input: "training/Adadelta/add_1/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_1"
      input: "training/Adadelta/Const_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value/Minimum"
      input: "training/Adadelta/Const_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_2"
      op: "Mul"
      input: "training/Adadelta/gradients/conv1/Conv2D_grad/Conv2DBackpropFilter"
      input: "training/Adadelta/Sqrt"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_2/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_2"
      op: "Add"
      input: "training/Adadelta/add"
      input: "training/Adadelta/add_2/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_1/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_2"
      input: "training/Adadelta/Const_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_1"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_1/Minimum"
      input: "training/Adadelta/Const_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_1"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv"
      op: "RealDiv"
      input: "training/Adadelta/mul_2"
      input: "training/Adadelta/Sqrt_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_4"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_3"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_4"
      input: "training/Adadelta/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_5"
      op: "ReadVariableOp"
      input: "conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_5"
      input: "training/Adadelta/mul_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "conv1/kernel"
      input: "training/Adadelta/sub"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_6"
      op: "ReadVariableOp"
      input: "conv1/kernel"
      input: "^training/Adadelta/AssignVariableOp_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_7"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_4/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_4"
      op: "Mul"
      input: "training/Adadelta/mul_4/x"
      input: "training/Adadelta/ReadVariableOp_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_1"
      op: "Square"
      input: "training/Adadelta/truediv"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_5/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_5"
      op: "Mul"
      input: "training/Adadelta/mul_5/x"
      input: "training/Adadelta/Square_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_3"
      op: "Add"
      input: "training/Adadelta/mul_4"
      input: "training/Adadelta/mul_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_16"
      input: "training/Adadelta/add_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_8"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_16"
      input: "^training/Adadelta/AssignVariableOp_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 1
              }
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_9"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_6/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_6"
      op: "Mul"
      input: "training/Adadelta/mul_6/x"
      input: "training/Adadelta/ReadVariableOp_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_2"
      op: "Square"
      input: "training/Adadelta/gradients/conv1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_7/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_7"
      op: "Mul"
      input: "training/Adadelta/mul_7/x"
      input: "training/Adadelta/Square_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_4"
      op: "Add"
      input: "training/Adadelta/mul_6"
      input: "training/Adadelta/mul_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_1"
      input: "training/Adadelta/add_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_10"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_1"
      input: "^training/Adadelta/AssignVariableOp_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_11"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_5/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_5"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_11"
      input: "training/Adadelta/add_5/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_6"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_2/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_5"
      input: "training/Adadelta/Const_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_2"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_2/Minimum"
      input: "training/Adadelta/Const_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_2"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_8"
      op: "Mul"
      input: "training/Adadelta/gradients/conv1/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_6/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_6"
      op: "Add"
      input: "training/Adadelta/add_4"
      input: "training/Adadelta/add_6/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_7"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_3/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_6"
      input: "training/Adadelta/Const_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_3"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_3/Minimum"
      input: "training/Adadelta/Const_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_3"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_1"
      op: "RealDiv"
      input: "training/Adadelta/mul_8"
      input: "training/Adadelta/Sqrt_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_12"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_9"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_12"
      input: "training/Adadelta/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_13"
      op: "ReadVariableOp"
      input: "conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_1"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_13"
      input: "training/Adadelta/mul_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "conv1/bias"
      input: "training/Adadelta/sub_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_14"
      op: "ReadVariableOp"
      input: "conv1/bias"
      input: "^training/Adadelta/AssignVariableOp_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_15"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_10/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_10"
      op: "Mul"
      input: "training/Adadelta/mul_10/x"
      input: "training/Adadelta/ReadVariableOp_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_3"
      op: "Square"
      input: "training/Adadelta/truediv_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_11/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_11"
      op: "Mul"
      input: "training/Adadelta/mul_11/x"
      input: "training/Adadelta/Square_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_7"
      op: "Add"
      input: "training/Adadelta/mul_10"
      input: "training/Adadelta/mul_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_17"
      input: "training/Adadelta/add_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_16"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_17"
      input: "^training/Adadelta/AssignVariableOp_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_17"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_12/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_12"
      op: "Mul"
      input: "training/Adadelta/mul_12/x"
      input: "training/Adadelta/ReadVariableOp_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_4"
      op: "Square"
      input: "training/Adadelta/gradients/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_13/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_13"
      op: "Mul"
      input: "training/Adadelta/mul_13/x"
      input: "training/Adadelta/Square_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_8"
      op: "Add"
      input: "training/Adadelta/mul_12"
      input: "training/Adadelta/mul_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_2"
      input: "training/Adadelta/add_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_18"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_2"
      input: "^training/Adadelta/AssignVariableOp_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_19"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_9/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_9"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_19"
      input: "training/Adadelta/add_9/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_9"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_10"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_4/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_9"
      input: "training/Adadelta/Const_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_4"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_4/Minimum"
      input: "training/Adadelta/Const_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_4"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_14"
      op: "Mul"
      input: "training/Adadelta/gradients/conv2_1/Conv2D_grad/Conv2DBackpropFilter"
      input: "training/Adadelta/Sqrt_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_10/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_10"
      op: "Add"
      input: "training/Adadelta/add_8"
      input: "training/Adadelta/add_10/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_11"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_12"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_5/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_10"
      input: "training/Adadelta/Const_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_5"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_5/Minimum"
      input: "training/Adadelta/Const_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_5"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_2"
      op: "RealDiv"
      input: "training/Adadelta/mul_14"
      input: "training/Adadelta/Sqrt_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_20"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_15"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_20"
      input: "training/Adadelta/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_21"
      op: "ReadVariableOp"
      input: "conv2_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_2"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_21"
      input: "training/Adadelta/mul_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "conv2_1/kernel"
      input: "training/Adadelta/sub_2"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_22"
      op: "ReadVariableOp"
      input: "conv2_1/kernel"
      input: "^training/Adadelta/AssignVariableOp_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_23"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_16/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_16"
      op: "Mul"
      input: "training/Adadelta/mul_16/x"
      input: "training/Adadelta/ReadVariableOp_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_5"
      op: "Square"
      input: "training/Adadelta/truediv_2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_17/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_17"
      op: "Mul"
      input: "training/Adadelta/mul_17/x"
      input: "training/Adadelta/Square_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_11"
      op: "Add"
      input: "training/Adadelta/mul_16"
      input: "training/Adadelta/mul_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_18"
      input: "training/Adadelta/add_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_24"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_18"
      input: "^training/Adadelta/AssignVariableOp_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_25"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_18/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_18"
      op: "Mul"
      input: "training/Adadelta/mul_18/x"
      input: "training/Adadelta/ReadVariableOp_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_6"
      op: "Square"
      input: "training/Adadelta/gradients/conv2_1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_19/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_19"
      op: "Mul"
      input: "training/Adadelta/mul_19/x"
      input: "training/Adadelta/Square_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_12"
      op: "Add"
      input: "training/Adadelta/mul_18"
      input: "training/Adadelta/mul_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_3"
      input: "training/Adadelta/add_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_26"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_3"
      input: "^training/Adadelta/AssignVariableOp_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_27"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_13/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_13"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_27"
      input: "training/Adadelta/add_13/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_13"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_14"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_6/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_13"
      input: "training/Adadelta/Const_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_6"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_6/Minimum"
      input: "training/Adadelta/Const_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_6"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_20"
      op: "Mul"
      input: "training/Adadelta/gradients/conv2_1/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_14/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_14"
      op: "Add"
      input: "training/Adadelta/add_12"
      input: "training/Adadelta/add_14/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_15"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_16"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_7/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_14"
      input: "training/Adadelta/Const_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_7"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_7/Minimum"
      input: "training/Adadelta/Const_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_7"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_3"
      op: "RealDiv"
      input: "training/Adadelta/mul_20"
      input: "training/Adadelta/Sqrt_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_28"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_21"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_28"
      input: "training/Adadelta/truediv_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_29"
      op: "ReadVariableOp"
      input: "conv2_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_3"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_29"
      input: "training/Adadelta/mul_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "conv2_1/bias"
      input: "training/Adadelta/sub_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_30"
      op: "ReadVariableOp"
      input: "conv2_1/bias"
      input: "^training/Adadelta/AssignVariableOp_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_31"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_22/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_22"
      op: "Mul"
      input: "training/Adadelta/mul_22/x"
      input: "training/Adadelta/ReadVariableOp_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_7"
      op: "Square"
      input: "training/Adadelta/truediv_3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_23/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_23"
      op: "Mul"
      input: "training/Adadelta/mul_23/x"
      input: "training/Adadelta/Square_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_15"
      op: "Add"
      input: "training/Adadelta/mul_22"
      input: "training/Adadelta/mul_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_19"
      input: "training/Adadelta/add_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_32"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_19"
      input: "^training/Adadelta/AssignVariableOp_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_33"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_24/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_24"
      op: "Mul"
      input: "training/Adadelta/mul_24/x"
      input: "training/Adadelta/ReadVariableOp_33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_8"
      op: "Square"
      input: "training/Adadelta/gradients/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_25/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_25"
      op: "Mul"
      input: "training/Adadelta/mul_25/x"
      input: "training/Adadelta/Square_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_16"
      op: "Add"
      input: "training/Adadelta/mul_24"
      input: "training/Adadelta/mul_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_4"
      input: "training/Adadelta/add_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_34"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_4"
      input: "^training/Adadelta/AssignVariableOp_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_35"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_17/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_17"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_35"
      input: "training/Adadelta/add_17/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_17"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_18"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_8/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_17"
      input: "training/Adadelta/Const_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_8"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_8/Minimum"
      input: "training/Adadelta/Const_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_8"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_26"
      op: "Mul"
      input: "training/Adadelta/gradients/conv2_2/Conv2D_grad/Conv2DBackpropFilter"
      input: "training/Adadelta/Sqrt_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_18/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_18"
      op: "Add"
      input: "training/Adadelta/add_16"
      input: "training/Adadelta/add_18/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_19"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_20"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_9/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_18"
      input: "training/Adadelta/Const_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_9"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_9/Minimum"
      input: "training/Adadelta/Const_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_9"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_4"
      op: "RealDiv"
      input: "training/Adadelta/mul_26"
      input: "training/Adadelta/Sqrt_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_36"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_27"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_36"
      input: "training/Adadelta/truediv_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_37"
      op: "ReadVariableOp"
      input: "conv2_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_4"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_37"
      input: "training/Adadelta/mul_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "conv2_2/kernel"
      input: "training/Adadelta/sub_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_38"
      op: "ReadVariableOp"
      input: "conv2_2/kernel"
      input: "^training/Adadelta/AssignVariableOp_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_39"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_28/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_28"
      op: "Mul"
      input: "training/Adadelta/mul_28/x"
      input: "training/Adadelta/ReadVariableOp_39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_9"
      op: "Square"
      input: "training/Adadelta/truediv_4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_29/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_29"
      op: "Mul"
      input: "training/Adadelta/mul_29/x"
      input: "training/Adadelta/Square_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_19"
      op: "Add"
      input: "training/Adadelta/mul_28"
      input: "training/Adadelta/mul_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_20"
      input: "training/Adadelta/add_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_40"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_20"
      input: "^training/Adadelta/AssignVariableOp_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 32
              }
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_41"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_30/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_30"
      op: "Mul"
      input: "training/Adadelta/mul_30/x"
      input: "training/Adadelta/ReadVariableOp_41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_10"
      op: "Square"
      input: "training/Adadelta/gradients/conv2_2/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_31/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_31"
      op: "Mul"
      input: "training/Adadelta/mul_31/x"
      input: "training/Adadelta/Square_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_20"
      op: "Add"
      input: "training/Adadelta/mul_30"
      input: "training/Adadelta/mul_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_5"
      input: "training/Adadelta/add_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_42"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_5"
      input: "^training/Adadelta/AssignVariableOp_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_43"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_21/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_21"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_43"
      input: "training/Adadelta/add_21/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_21"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_22"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_10/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_21"
      input: "training/Adadelta/Const_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_10"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_10/Minimum"
      input: "training/Adadelta/Const_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_10"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_32"
      op: "Mul"
      input: "training/Adadelta/gradients/conv2_2/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_22/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_22"
      op: "Add"
      input: "training/Adadelta/add_20"
      input: "training/Adadelta/add_22/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_23"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_24"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_11/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_22"
      input: "training/Adadelta/Const_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_11"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_11/Minimum"
      input: "training/Adadelta/Const_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_11"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_5"
      op: "RealDiv"
      input: "training/Adadelta/mul_32"
      input: "training/Adadelta/Sqrt_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_44"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_33"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_44"
      input: "training/Adadelta/truediv_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_45"
      op: "ReadVariableOp"
      input: "conv2_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_5"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_45"
      input: "training/Adadelta/mul_33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "conv2_2/bias"
      input: "training/Adadelta/sub_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_46"
      op: "ReadVariableOp"
      input: "conv2_2/bias"
      input: "^training/Adadelta/AssignVariableOp_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_47"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_34/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_34"
      op: "Mul"
      input: "training/Adadelta/mul_34/x"
      input: "training/Adadelta/ReadVariableOp_47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_11"
      op: "Square"
      input: "training/Adadelta/truediv_5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_35/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_35"
      op: "Mul"
      input: "training/Adadelta/mul_35/x"
      input: "training/Adadelta/Square_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_23"
      op: "Add"
      input: "training/Adadelta/mul_34"
      input: "training/Adadelta/mul_35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_21"
      input: "training/Adadelta/add_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_48"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_21"
      input: "^training/Adadelta/AssignVariableOp_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 64
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_49"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_36/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_36"
      op: "Mul"
      input: "training/Adadelta/mul_36/x"
      input: "training/Adadelta/ReadVariableOp_49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_12"
      op: "Square"
      input: "training/Adadelta/gradients/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_37/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_37"
      op: "Mul"
      input: "training/Adadelta/mul_37/x"
      input: "training/Adadelta/Square_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_24"
      op: "Add"
      input: "training/Adadelta/mul_36"
      input: "training/Adadelta/mul_37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_6"
      input: "training/Adadelta/add_24"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_50"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_6"
      input: "^training/Adadelta/AssignVariableOp_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_51"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_25/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_25"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_51"
      input: "training/Adadelta/add_25/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_25"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_26"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_12/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_25"
      input: "training/Adadelta/Const_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_12"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_12/Minimum"
      input: "training/Adadelta/Const_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_12"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_38"
      op: "Mul"
      input: "training/Adadelta/gradients/conv3_1/Conv2D_grad/Conv2DBackpropFilter"
      input: "training/Adadelta/Sqrt_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_26/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_26"
      op: "Add"
      input: "training/Adadelta/add_24"
      input: "training/Adadelta/add_26/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_27"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_28"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_13/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_26"
      input: "training/Adadelta/Const_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_13"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_13/Minimum"
      input: "training/Adadelta/Const_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_13"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_6"
      op: "RealDiv"
      input: "training/Adadelta/mul_38"
      input: "training/Adadelta/Sqrt_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_52"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_39"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_52"
      input: "training/Adadelta/truediv_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_53"
      op: "ReadVariableOp"
      input: "conv3_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_6"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_53"
      input: "training/Adadelta/mul_39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "conv3_1/kernel"
      input: "training/Adadelta/sub_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_54"
      op: "ReadVariableOp"
      input: "conv3_1/kernel"
      input: "^training/Adadelta/AssignVariableOp_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_55"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_40/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_40"
      op: "Mul"
      input: "training/Adadelta/mul_40/x"
      input: "training/Adadelta/ReadVariableOp_55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_13"
      op: "Square"
      input: "training/Adadelta/truediv_6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_41/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_41"
      op: "Mul"
      input: "training/Adadelta/mul_41/x"
      input: "training/Adadelta/Square_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_27"
      op: "Add"
      input: "training/Adadelta/mul_40"
      input: "training/Adadelta/mul_41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_22"
      input: "training/Adadelta/add_27"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_56"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_22"
      input: "^training/Adadelta/AssignVariableOp_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_57"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_42/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_42"
      op: "Mul"
      input: "training/Adadelta/mul_42/x"
      input: "training/Adadelta/ReadVariableOp_57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_14"
      op: "Square"
      input: "training/Adadelta/gradients/conv3_1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_43/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_43"
      op: "Mul"
      input: "training/Adadelta/mul_43/x"
      input: "training/Adadelta/Square_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_28"
      op: "Add"
      input: "training/Adadelta/mul_42"
      input: "training/Adadelta/mul_43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_7"
      input: "training/Adadelta/add_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_58"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_7"
      input: "^training/Adadelta/AssignVariableOp_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_59"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_29/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_29"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_59"
      input: "training/Adadelta/add_29/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_29"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_30"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_14/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_29"
      input: "training/Adadelta/Const_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_14"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_14/Minimum"
      input: "training/Adadelta/Const_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_14"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_44"
      op: "Mul"
      input: "training/Adadelta/gradients/conv3_1/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_30/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_30"
      op: "Add"
      input: "training/Adadelta/add_28"
      input: "training/Adadelta/add_30/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_31"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_32"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_15/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_30"
      input: "training/Adadelta/Const_32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_15"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_15/Minimum"
      input: "training/Adadelta/Const_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_15"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_7"
      op: "RealDiv"
      input: "training/Adadelta/mul_44"
      input: "training/Adadelta/Sqrt_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_60"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_45"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_60"
      input: "training/Adadelta/truediv_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_61"
      op: "ReadVariableOp"
      input: "conv3_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_7"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_61"
      input: "training/Adadelta/mul_45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "conv3_1/bias"
      input: "training/Adadelta/sub_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_62"
      op: "ReadVariableOp"
      input: "conv3_1/bias"
      input: "^training/Adadelta/AssignVariableOp_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_63"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_46/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_46"
      op: "Mul"
      input: "training/Adadelta/mul_46/x"
      input: "training/Adadelta/ReadVariableOp_63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_15"
      op: "Square"
      input: "training/Adadelta/truediv_7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_47/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_47"
      op: "Mul"
      input: "training/Adadelta/mul_47/x"
      input: "training/Adadelta/Square_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_31"
      op: "Add"
      input: "training/Adadelta/mul_46"
      input: "training/Adadelta/mul_47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_23"
      input: "training/Adadelta/add_31"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_64"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_23"
      input: "^training/Adadelta/AssignVariableOp_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_65"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_48/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_48"
      op: "Mul"
      input: "training/Adadelta/mul_48/x"
      input: "training/Adadelta/ReadVariableOp_65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_16"
      op: "Square"
      input: "training/Adadelta/gradients/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_49/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_49"
      op: "Mul"
      input: "training/Adadelta/mul_49/x"
      input: "training/Adadelta/Square_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_32"
      op: "Add"
      input: "training/Adadelta/mul_48"
      input: "training/Adadelta/mul_49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_8"
      input: "training/Adadelta/add_32"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_66"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_8"
      input: "^training/Adadelta/AssignVariableOp_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_67"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_33/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_33"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_67"
      input: "training/Adadelta/add_33/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_33"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_34"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_16/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_33"
      input: "training/Adadelta/Const_34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_16"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_16/Minimum"
      input: "training/Adadelta/Const_33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_16"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_50"
      op: "Mul"
      input: "training/Adadelta/gradients/conv3_2/Conv2D_grad/Conv2DBackpropFilter"
      input: "training/Adadelta/Sqrt_16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_34/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_34"
      op: "Add"
      input: "training/Adadelta/add_32"
      input: "training/Adadelta/add_34/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_35"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_36"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_17/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_34"
      input: "training/Adadelta/Const_36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_17"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_17/Minimum"
      input: "training/Adadelta/Const_35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_17"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_8"
      op: "RealDiv"
      input: "training/Adadelta/mul_50"
      input: "training/Adadelta/Sqrt_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_68"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_51"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_68"
      input: "training/Adadelta/truediv_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_69"
      op: "ReadVariableOp"
      input: "conv3_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_8"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_69"
      input: "training/Adadelta/mul_51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_25"
      op: "AssignVariableOp"
      input: "conv3_2/kernel"
      input: "training/Adadelta/sub_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_70"
      op: "ReadVariableOp"
      input: "conv3_2/kernel"
      input: "^training/Adadelta/AssignVariableOp_25"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_71"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_52/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_52"
      op: "Mul"
      input: "training/Adadelta/mul_52/x"
      input: "training/Adadelta/ReadVariableOp_71"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_17"
      op: "Square"
      input: "training/Adadelta/truediv_8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_53/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_53"
      op: "Mul"
      input: "training/Adadelta/mul_53/x"
      input: "training/Adadelta/Square_17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_35"
      op: "Add"
      input: "training/Adadelta/mul_52"
      input: "training/Adadelta/mul_53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_26"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_24"
      input: "training/Adadelta/add_35"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_72"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_24"
      input: "^training/Adadelta/AssignVariableOp_26"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 3
              }
              dim {
                size: 3
              }
              dim {
                size: 64
              }
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_73"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_54/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_54"
      op: "Mul"
      input: "training/Adadelta/mul_54/x"
      input: "training/Adadelta/ReadVariableOp_73"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_18"
      op: "Square"
      input: "training/Adadelta/gradients/conv3_2/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_55/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_55"
      op: "Mul"
      input: "training/Adadelta/mul_55/x"
      input: "training/Adadelta/Square_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_36"
      op: "Add"
      input: "training/Adadelta/mul_54"
      input: "training/Adadelta/mul_55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_27"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_9"
      input: "training/Adadelta/add_36"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_74"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_9"
      input: "^training/Adadelta/AssignVariableOp_27"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_75"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_25"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_37/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_37"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_75"
      input: "training/Adadelta/add_37/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_37"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_38"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_18/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_37"
      input: "training/Adadelta/Const_38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_18"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_18/Minimum"
      input: "training/Adadelta/Const_37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_18"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_56"
      op: "Mul"
      input: "training/Adadelta/gradients/conv3_2/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_38/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_38"
      op: "Add"
      input: "training/Adadelta/add_36"
      input: "training/Adadelta/add_38/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_39"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_40"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_19/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_38"
      input: "training/Adadelta/Const_40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_19"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_19/Minimum"
      input: "training/Adadelta/Const_39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_19"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_9"
      op: "RealDiv"
      input: "training/Adadelta/mul_56"
      input: "training/Adadelta/Sqrt_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_76"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_57"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_76"
      input: "training/Adadelta/truediv_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_77"
      op: "ReadVariableOp"
      input: "conv3_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_9"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_77"
      input: "training/Adadelta/mul_57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_28"
      op: "AssignVariableOp"
      input: "conv3_2/bias"
      input: "training/Adadelta/sub_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_78"
      op: "ReadVariableOp"
      input: "conv3_2/bias"
      input: "^training/Adadelta/AssignVariableOp_28"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_79"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_25"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_58/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_58"
      op: "Mul"
      input: "training/Adadelta/mul_58/x"
      input: "training/Adadelta/ReadVariableOp_79"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_19"
      op: "Square"
      input: "training/Adadelta/truediv_9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_59/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_59"
      op: "Mul"
      input: "training/Adadelta/mul_59/x"
      input: "training/Adadelta/Square_19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_39"
      op: "Add"
      input: "training/Adadelta/mul_58"
      input: "training/Adadelta/mul_59"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_29"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_25"
      input: "training/Adadelta/add_39"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_80"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_25"
      input: "^training/Adadelta/AssignVariableOp_29"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 256
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_81"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_60/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_60"
      op: "Mul"
      input: "training/Adadelta/mul_60/x"
      input: "training/Adadelta/ReadVariableOp_81"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_20"
      op: "Square"
      input: "training/Adadelta/gradients/fc1/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_61/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_61"
      op: "Mul"
      input: "training/Adadelta/mul_61/x"
      input: "training/Adadelta/Square_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_40"
      op: "Add"
      input: "training/Adadelta/mul_60"
      input: "training/Adadelta/mul_61"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_30"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_10"
      input: "training/Adadelta/add_40"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_82"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_10"
      input: "^training/Adadelta/AssignVariableOp_30"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_83"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_26"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_41/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_41"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_83"
      input: "training/Adadelta/add_41/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_41"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_42"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_20/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_41"
      input: "training/Adadelta/Const_42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_20"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_20/Minimum"
      input: "training/Adadelta/Const_41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_20"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_62"
      op: "Mul"
      input: "training/Adadelta/gradients/fc1/MatMul_grad/MatMul_1"
      input: "training/Adadelta/Sqrt_20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_42/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_42"
      op: "Add"
      input: "training/Adadelta/add_40"
      input: "training/Adadelta/add_42/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_43"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_44"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_21/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_42"
      input: "training/Adadelta/Const_44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_21"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_21/Minimum"
      input: "training/Adadelta/Const_43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_21"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_10"
      op: "RealDiv"
      input: "training/Adadelta/mul_62"
      input: "training/Adadelta/Sqrt_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_84"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_63"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_84"
      input: "training/Adadelta/truediv_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_85"
      op: "ReadVariableOp"
      input: "fc1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_10"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_85"
      input: "training/Adadelta/mul_63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_31"
      op: "AssignVariableOp"
      input: "fc1/kernel"
      input: "training/Adadelta/sub_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_86"
      op: "ReadVariableOp"
      input: "fc1/kernel"
      input: "^training/Adadelta/AssignVariableOp_31"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_87"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_26"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_64/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_64"
      op: "Mul"
      input: "training/Adadelta/mul_64/x"
      input: "training/Adadelta/ReadVariableOp_87"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_21"
      op: "Square"
      input: "training/Adadelta/truediv_10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_65/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_65"
      op: "Mul"
      input: "training/Adadelta/mul_65/x"
      input: "training/Adadelta/Square_21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_43"
      op: "Add"
      input: "training/Adadelta/mul_64"
      input: "training/Adadelta/mul_65"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_32"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_26"
      input: "training/Adadelta/add_43"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_88"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_26"
      input: "^training/Adadelta/AssignVariableOp_32"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 25088
              }
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_89"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_66/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_66"
      op: "Mul"
      input: "training/Adadelta/mul_66/x"
      input: "training/Adadelta/ReadVariableOp_89"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_22"
      op: "Square"
      input: "training/Adadelta/gradients/fc1/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_67/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_67"
      op: "Mul"
      input: "training/Adadelta/mul_67/x"
      input: "training/Adadelta/Square_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_44"
      op: "Add"
      input: "training/Adadelta/mul_66"
      input: "training/Adadelta/mul_67"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_33"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_11"
      input: "training/Adadelta/add_44"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_90"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_11"
      input: "^training/Adadelta/AssignVariableOp_33"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_91"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_27"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_45/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_45"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_91"
      input: "training/Adadelta/add_45/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_45"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_46"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_22/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_45"
      input: "training/Adadelta/Const_46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_22"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_22/Minimum"
      input: "training/Adadelta/Const_45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_22"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_68"
      op: "Mul"
      input: "training/Adadelta/gradients/fc1/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_46/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_46"
      op: "Add"
      input: "training/Adadelta/add_44"
      input: "training/Adadelta/add_46/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_47"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_48"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_23/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_46"
      input: "training/Adadelta/Const_48"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_23"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_23/Minimum"
      input: "training/Adadelta/Const_47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_23"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_11"
      op: "RealDiv"
      input: "training/Adadelta/mul_68"
      input: "training/Adadelta/Sqrt_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_92"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_69"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_92"
      input: "training/Adadelta/truediv_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_93"
      op: "ReadVariableOp"
      input: "fc1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_11"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_93"
      input: "training/Adadelta/mul_69"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_34"
      op: "AssignVariableOp"
      input: "fc1/bias"
      input: "training/Adadelta/sub_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_94"
      op: "ReadVariableOp"
      input: "fc1/bias"
      input: "^training/Adadelta/AssignVariableOp_34"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_95"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_27"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_70/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_70"
      op: "Mul"
      input: "training/Adadelta/mul_70/x"
      input: "training/Adadelta/ReadVariableOp_95"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_23"
      op: "Square"
      input: "training/Adadelta/truediv_11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_71/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_71"
      op: "Mul"
      input: "training/Adadelta/mul_71/x"
      input: "training/Adadelta/Square_23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_47"
      op: "Add"
      input: "training/Adadelta/mul_70"
      input: "training/Adadelta/mul_71"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_35"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_27"
      input: "training/Adadelta/add_47"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_96"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_27"
      input: "^training/Adadelta/AssignVariableOp_35"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_97"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_72/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_72"
      op: "Mul"
      input: "training/Adadelta/mul_72/x"
      input: "training/Adadelta/ReadVariableOp_97"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_24"
      op: "Square"
      input: "training/Adadelta/gradients/fc2/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_73/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_73"
      op: "Mul"
      input: "training/Adadelta/mul_73/x"
      input: "training/Adadelta/Square_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_48"
      op: "Add"
      input: "training/Adadelta/mul_72"
      input: "training/Adadelta/mul_73"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_36"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_12"
      input: "training/Adadelta/add_48"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_98"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_12"
      input: "^training/Adadelta/AssignVariableOp_36"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_99"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_28"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_49/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_49"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_99"
      input: "training/Adadelta/add_49/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_49"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_50"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_24/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_49"
      input: "training/Adadelta/Const_50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_24"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_24/Minimum"
      input: "training/Adadelta/Const_49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_24"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_74"
      op: "Mul"
      input: "training/Adadelta/gradients/fc2/MatMul_grad/MatMul_1"
      input: "training/Adadelta/Sqrt_24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_50/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_50"
      op: "Add"
      input: "training/Adadelta/add_48"
      input: "training/Adadelta/add_50/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_51"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_52"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_25/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_50"
      input: "training/Adadelta/Const_52"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_25"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_25/Minimum"
      input: "training/Adadelta/Const_51"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_25"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_12"
      op: "RealDiv"
      input: "training/Adadelta/mul_74"
      input: "training/Adadelta/Sqrt_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_100"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_75"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_100"
      input: "training/Adadelta/truediv_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_101"
      op: "ReadVariableOp"
      input: "fc2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_12"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_101"
      input: "training/Adadelta/mul_75"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_37"
      op: "AssignVariableOp"
      input: "fc2/kernel"
      input: "training/Adadelta/sub_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_102"
      op: "ReadVariableOp"
      input: "fc2/kernel"
      input: "^training/Adadelta/AssignVariableOp_37"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_103"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_28"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_76/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_76"
      op: "Mul"
      input: "training/Adadelta/mul_76/x"
      input: "training/Adadelta/ReadVariableOp_103"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_25"
      op: "Square"
      input: "training/Adadelta/truediv_12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_77/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_77"
      op: "Mul"
      input: "training/Adadelta/mul_77/x"
      input: "training/Adadelta/Square_25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_51"
      op: "Add"
      input: "training/Adadelta/mul_76"
      input: "training/Adadelta/mul_77"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_38"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_28"
      input: "training/Adadelta/add_51"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_104"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_28"
      input: "^training/Adadelta/AssignVariableOp_38"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1000
              }
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_105"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_78/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_78"
      op: "Mul"
      input: "training/Adadelta/mul_78/x"
      input: "training/Adadelta/ReadVariableOp_105"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_26"
      op: "Square"
      input: "training/Adadelta/gradients/fc2/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_79/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_79"
      op: "Mul"
      input: "training/Adadelta/mul_79/x"
      input: "training/Adadelta/Square_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_52"
      op: "Add"
      input: "training/Adadelta/mul_78"
      input: "training/Adadelta/mul_79"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_39"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_13"
      input: "training/Adadelta/add_52"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_106"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_13"
      input: "^training/Adadelta/AssignVariableOp_39"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_107"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_29"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_53/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_53"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_107"
      input: "training/Adadelta/add_53/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_53"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_54"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_26/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_53"
      input: "training/Adadelta/Const_54"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_26"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_26/Minimum"
      input: "training/Adadelta/Const_53"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_26"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_80"
      op: "Mul"
      input: "training/Adadelta/gradients/fc2/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_54/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_54"
      op: "Add"
      input: "training/Adadelta/add_52"
      input: "training/Adadelta/add_54/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_55"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_56"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_27/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_54"
      input: "training/Adadelta/Const_56"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_27"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_27/Minimum"
      input: "training/Adadelta/Const_55"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_27"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_13"
      op: "RealDiv"
      input: "training/Adadelta/mul_80"
      input: "training/Adadelta/Sqrt_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_108"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_81"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_108"
      input: "training/Adadelta/truediv_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_109"
      op: "ReadVariableOp"
      input: "fc2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_13"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_109"
      input: "training/Adadelta/mul_81"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_40"
      op: "AssignVariableOp"
      input: "fc2/bias"
      input: "training/Adadelta/sub_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_110"
      op: "ReadVariableOp"
      input: "fc2/bias"
      input: "^training/Adadelta/AssignVariableOp_40"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_111"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_29"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_82/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_82"
      op: "Mul"
      input: "training/Adadelta/mul_82/x"
      input: "training/Adadelta/ReadVariableOp_111"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_27"
      op: "Square"
      input: "training/Adadelta/truediv_13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_83/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_83"
      op: "Mul"
      input: "training/Adadelta/mul_83/x"
      input: "training/Adadelta/Square_27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_55"
      op: "Add"
      input: "training/Adadelta/mul_82"
      input: "training/Adadelta/mul_83"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_41"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_29"
      input: "training/Adadelta/add_55"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_112"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_29"
      input: "^training/Adadelta/AssignVariableOp_41"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_113"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_84/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_84"
      op: "Mul"
      input: "training/Adadelta/mul_84/x"
      input: "training/Adadelta/ReadVariableOp_113"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_28"
      op: "Square"
      input: "training/Adadelta/gradients/dense/MatMul_grad/MatMul_1"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_85/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_85"
      op: "Mul"
      input: "training/Adadelta/mul_85/x"
      input: "training/Adadelta/Square_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_56"
      op: "Add"
      input: "training/Adadelta/mul_84"
      input: "training/Adadelta/mul_85"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_42"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_14"
      input: "training/Adadelta/add_56"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_114"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_14"
      input: "^training/Adadelta/AssignVariableOp_42"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_115"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_30"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_57/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_57"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_115"
      input: "training/Adadelta/add_57/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_57"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_58"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_28/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_57"
      input: "training/Adadelta/Const_58"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_28"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_28/Minimum"
      input: "training/Adadelta/Const_57"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_28"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_86"
      op: "Mul"
      input: "training/Adadelta/gradients/dense/MatMul_grad/MatMul_1"
      input: "training/Adadelta/Sqrt_28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_58/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_58"
      op: "Add"
      input: "training/Adadelta/add_56"
      input: "training/Adadelta/add_58/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_59"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_60"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_29/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_58"
      input: "training/Adadelta/Const_60"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_29"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_29/Minimum"
      input: "training/Adadelta/Const_59"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_29"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_14"
      op: "RealDiv"
      input: "training/Adadelta/mul_86"
      input: "training/Adadelta/Sqrt_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_116"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_87"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_116"
      input: "training/Adadelta/truediv_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_117"
      op: "ReadVariableOp"
      input: "dense/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_14"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_117"
      input: "training/Adadelta/mul_87"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_43"
      op: "AssignVariableOp"
      input: "dense/kernel"
      input: "training/Adadelta/sub_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_118"
      op: "ReadVariableOp"
      input: "dense/kernel"
      input: "^training/Adadelta/AssignVariableOp_43"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_119"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_30"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_88/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_88"
      op: "Mul"
      input: "training/Adadelta/mul_88/x"
      input: "training/Adadelta/ReadVariableOp_119"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_29"
      op: "Square"
      input: "training/Adadelta/truediv_14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_89/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_89"
      op: "Mul"
      input: "training/Adadelta/mul_89/x"
      input: "training/Adadelta/Square_29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_59"
      op: "Add"
      input: "training/Adadelta/mul_88"
      input: "training/Adadelta/mul_89"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_44"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_30"
      input: "training/Adadelta/add_59"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_120"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_30"
      input: "^training/Adadelta/AssignVariableOp_44"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 500
              }
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_121"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_90/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_90"
      op: "Mul"
      input: "training/Adadelta/mul_90/x"
      input: "training/Adadelta/ReadVariableOp_121"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_30"
      op: "Square"
      input: "training/Adadelta/gradients/dense/BiasAdd_grad/BiasAddGrad"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_91/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_91"
      op: "Mul"
      input: "training/Adadelta/mul_91/x"
      input: "training/Adadelta/Square_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_60"
      op: "Add"
      input: "training/Adadelta/mul_90"
      input: "training/Adadelta/mul_91"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_45"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_15"
      input: "training/Adadelta/add_60"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_122"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_15"
      input: "^training/Adadelta/AssignVariableOp_45"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_123"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_31"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/add_61/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_61"
      op: "Add"
      input: "training/Adadelta/ReadVariableOp_123"
      input: "training/Adadelta/add_61/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_61"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_62"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_30/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_61"
      input: "training/Adadelta/Const_62"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_30"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_30/Minimum"
      input: "training/Adadelta/Const_61"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_30"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_92"
      op: "Mul"
      input: "training/Adadelta/gradients/dense/BiasAdd_grad/BiasAddGrad"
      input: "training/Adadelta/Sqrt_30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_62/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0000000116860974e-07
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_62"
      op: "Add"
      input: "training/Adadelta/add_60"
      input: "training/Adadelta/add_62/y"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_63"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.0
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Const_64"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: inf
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_31/Minimum"
      op: "Minimum"
      input: "training/Adadelta/add_62"
      input: "training/Adadelta/Const_64"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/clip_by_value_31"
      op: "Maximum"
      input: "training/Adadelta/clip_by_value_31/Minimum"
      input: "training/Adadelta/Const_63"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Sqrt_31"
      op: "Sqrt"
      input: "training/Adadelta/clip_by_value_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/truediv_15"
      op: "RealDiv"
      input: "training/Adadelta/mul_92"
      input: "training/Adadelta/Sqrt_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_124"
      op: "ReadVariableOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_93"
      op: "Mul"
      input: "training/Adadelta/ReadVariableOp_124"
      input: "training/Adadelta/truediv_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_125"
      op: "ReadVariableOp"
      input: "dense/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/sub_15"
      op: "Sub"
      input: "training/Adadelta/ReadVariableOp_125"
      input: "training/Adadelta/mul_93"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_46"
      op: "AssignVariableOp"
      input: "dense/bias"
      input: "training/Adadelta/sub_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_126"
      op: "ReadVariableOp"
      input: "dense/bias"
      input: "^training/Adadelta/AssignVariableOp_46"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_127"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_31"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/mul_94/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.949999988079071
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_94"
      op: "Mul"
      input: "training/Adadelta/mul_94/x"
      input: "training/Adadelta/ReadVariableOp_127"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/Square_31"
      op: "Square"
      input: "training/Adadelta/truediv_15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_95/x"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.05000000074505806
          }
        }
      }
    }
    node {
      name: "training/Adadelta/mul_95"
      op: "Mul"
      input: "training/Adadelta/mul_95/x"
      input: "training/Adadelta/Square_31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/add_63"
      op: "Add"
      input: "training/Adadelta/mul_94"
      input: "training/Adadelta/mul_95"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
    }
    node {
      name: "training/Adadelta/AssignVariableOp_47"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_31"
      input: "training/Adadelta/add_63"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/Adadelta/ReadVariableOp_128"
      op: "ReadVariableOp"
      input: "training/Adadelta/Variable_31"
      input: "^training/Adadelta/AssignVariableOp_47"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 10
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "training/group_deps"
      op: "NoOp"
      input: "^loss/mul"
      input: "^metrics/acc/Mean"
      input: "^training/Adadelta/ReadVariableOp"
      input: "^training/Adadelta/ReadVariableOp_10"
      input: "^training/Adadelta/ReadVariableOp_102"
      input: "^training/Adadelta/ReadVariableOp_104"
      input: "^training/Adadelta/ReadVariableOp_106"
      input: "^training/Adadelta/ReadVariableOp_110"
      input: "^training/Adadelta/ReadVariableOp_112"
      input: "^training/Adadelta/ReadVariableOp_114"
      input: "^training/Adadelta/ReadVariableOp_118"
      input: "^training/Adadelta/ReadVariableOp_120"
      input: "^training/Adadelta/ReadVariableOp_122"
      input: "^training/Adadelta/ReadVariableOp_126"
      input: "^training/Adadelta/ReadVariableOp_128"
      input: "^training/Adadelta/ReadVariableOp_14"
      input: "^training/Adadelta/ReadVariableOp_16"
      input: "^training/Adadelta/ReadVariableOp_18"
      input: "^training/Adadelta/ReadVariableOp_2"
      input: "^training/Adadelta/ReadVariableOp_22"
      input: "^training/Adadelta/ReadVariableOp_24"
      input: "^training/Adadelta/ReadVariableOp_26"
      input: "^training/Adadelta/ReadVariableOp_30"
      input: "^training/Adadelta/ReadVariableOp_32"
      input: "^training/Adadelta/ReadVariableOp_34"
      input: "^training/Adadelta/ReadVariableOp_38"
      input: "^training/Adadelta/ReadVariableOp_40"
      input: "^training/Adadelta/ReadVariableOp_42"
      input: "^training/Adadelta/ReadVariableOp_46"
      input: "^training/Adadelta/ReadVariableOp_48"
      input: "^training/Adadelta/ReadVariableOp_50"
      input: "^training/Adadelta/ReadVariableOp_54"
      input: "^training/Adadelta/ReadVariableOp_56"
      input: "^training/Adadelta/ReadVariableOp_58"
      input: "^training/Adadelta/ReadVariableOp_6"
      input: "^training/Adadelta/ReadVariableOp_62"
      input: "^training/Adadelta/ReadVariableOp_64"
      input: "^training/Adadelta/ReadVariableOp_66"
      input: "^training/Adadelta/ReadVariableOp_70"
      input: "^training/Adadelta/ReadVariableOp_72"
      input: "^training/Adadelta/ReadVariableOp_74"
      input: "^training/Adadelta/ReadVariableOp_78"
      input: "^training/Adadelta/ReadVariableOp_8"
      input: "^training/Adadelta/ReadVariableOp_80"
      input: "^training/Adadelta/ReadVariableOp_82"
      input: "^training/Adadelta/ReadVariableOp_86"
      input: "^training/Adadelta/ReadVariableOp_88"
      input: "^training/Adadelta/ReadVariableOp_90"
      input: "^training/Adadelta/ReadVariableOp_94"
      input: "^training/Adadelta/ReadVariableOp_96"
      input: "^training/Adadelta/ReadVariableOp_98"
    }
    node {
      name: "group_deps"
      op: "NoOp"
      input: "^loss/mul"
      input: "^metrics/acc/Mean"
    }
    node {
      name: "VarIsInitializedOp"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_2"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_1"
      op: "VarIsInitializedOp"
      input: "fc2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_2"
      op: "VarIsInitializedOp"
      input: "fc1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_3"
      op: "VarIsInitializedOp"
      input: "Adadelta/lr"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_4"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_19"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_5"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_3"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_6"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_14"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_7"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_31"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_8"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_22"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_9"
      op: "VarIsInitializedOp"
      input: "Adadelta/iterations"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_10"
      op: "VarIsInitializedOp"
      input: "conv2_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_11"
      op: "VarIsInitializedOp"
      input: "Adadelta/decay"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_12"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_8"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_13"
      op: "VarIsInitializedOp"
      input: "conv3_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_14"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_21"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_15"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_7"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_16"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_10"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_17"
      op: "VarIsInitializedOp"
      input: "conv3_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_18"
      op: "VarIsInitializedOp"
      input: "fc1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_19"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_26"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_20"
      op: "VarIsInitializedOp"
      input: "conv2_1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_21"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_5"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_22"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_23"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_23"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_30"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_24"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_9"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_25"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_24"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_26"
      op: "VarIsInitializedOp"
      input: "conv1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_27"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_29"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_28"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_28"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_29"
      op: "VarIsInitializedOp"
      input: "dense/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_30"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_4"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_31"
      op: "VarIsInitializedOp"
      input: "conv1/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_32"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_17"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_33"
      op: "VarIsInitializedOp"
      input: "conv2_1/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_34"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_16"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_35"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_1"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_36"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_27"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_37"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_38"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_25"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_39"
      op: "VarIsInitializedOp"
      input: "conv3_2/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_40"
      op: "VarIsInitializedOp"
      input: "conv3_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_41"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_18"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_42"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_15"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_43"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_13"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_44"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_12"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_45"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_20"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_46"
      op: "VarIsInitializedOp"
      input: "conv2_2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_47"
      op: "VarIsInitializedOp"
      input: "dense/kernel"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_48"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_6"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_49"
      op: "VarIsInitializedOp"
      input: "training/Adadelta/Variable_11"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "VarIsInitializedOp_50"
      op: "VarIsInitializedOp"
      input: "fc2/bias"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "init"
      op: "NoOp"
      input: "^Adadelta/decay/Assign"
      input: "^Adadelta/iterations/Assign"
      input: "^Adadelta/lr/Assign"
      input: "^conv1/bias/Assign"
      input: "^conv1/kernel/Assign"
      input: "^conv2_1/bias/Assign"
      input: "^conv2_1/kernel/Assign"
      input: "^conv2_2/bias/Assign"
      input: "^conv2_2/kernel/Assign"
      input: "^conv3_1/bias/Assign"
      input: "^conv3_1/kernel/Assign"
      input: "^conv3_2/bias/Assign"
      input: "^conv3_2/kernel/Assign"
      input: "^dense/bias/Assign"
      input: "^dense/kernel/Assign"
      input: "^fc1/bias/Assign"
      input: "^fc1/kernel/Assign"
      input: "^fc2/bias/Assign"
      input: "^fc2/kernel/Assign"
      input: "^training/Adadelta/Variable/Assign"
      input: "^training/Adadelta/Variable_1/Assign"
      input: "^training/Adadelta/Variable_10/Assign"
      input: "^training/Adadelta/Variable_11/Assign"
      input: "^training/Adadelta/Variable_12/Assign"
      input: "^training/Adadelta/Variable_13/Assign"
      input: "^training/Adadelta/Variable_14/Assign"
      input: "^training/Adadelta/Variable_15/Assign"
      input: "^training/Adadelta/Variable_16/Assign"
      input: "^training/Adadelta/Variable_17/Assign"
      input: "^training/Adadelta/Variable_18/Assign"
      input: "^training/Adadelta/Variable_19/Assign"
      input: "^training/Adadelta/Variable_2/Assign"
      input: "^training/Adadelta/Variable_20/Assign"
      input: "^training/Adadelta/Variable_21/Assign"
      input: "^training/Adadelta/Variable_22/Assign"
      input: "^training/Adadelta/Variable_23/Assign"
      input: "^training/Adadelta/Variable_24/Assign"
      input: "^training/Adadelta/Variable_25/Assign"
      input: "^training/Adadelta/Variable_26/Assign"
      input: "^training/Adadelta/Variable_27/Assign"
      input: "^training/Adadelta/Variable_28/Assign"
      input: "^training/Adadelta/Variable_29/Assign"
      input: "^training/Adadelta/Variable_3/Assign"
      input: "^training/Adadelta/Variable_30/Assign"
      input: "^training/Adadelta/Variable_31/Assign"
      input: "^training/Adadelta/Variable_4/Assign"
      input: "^training/Adadelta/Variable_5/Assign"
      input: "^training/Adadelta/Variable_6/Assign"
      input: "^training/Adadelta/Variable_7/Assign"
      input: "^training/Adadelta/Variable_8/Assign"
      input: "^training/Adadelta/Variable_9/Assign"
    }
    node {
      name: "input_2"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 1
              }
              dim {
                size: 28
              }
              dim {
                size: 28
              }
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 28
            }
            dim {
              size: 28
            }
            dim {
              size: 1
            }
          }
        }
      }
    }
    node {
      name: "input_3"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: 28
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: 28
            }
          }
        }
      }
    }
    node {
      name: "input_4"
      op: "Placeholder"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
              dim {
                size: 28
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "shape"
        value {
          shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: 28
            }
          }
        }
      }
    }
    node {
      name: "save/Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "model"
          }
        }
      }
    }
    node {
      name: "save/StringJoin/inputs_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: "_temp_404d5340f790451fa4603c41f9ccdd75/part"
          }
        }
      }
    }
    node {
      name: "save/StringJoin"
      op: "StringJoin"
      input: "save/Const"
      input: "save/StringJoin/inputs_1"
      attr {
        key: "N"
        value {
          i: 2
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "separator"
        value {
          s: ""
        }
      }
    }
    node {
      name: "save/num_shards"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename/shard"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node {
      name: "save/ShardedFilename"
      op: "ShardedFilename"
      input: "save/StringJoin"
      input: "save/ShardedFilename/shard"
      input: "save/num_shards"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/SaveV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: "Adadelta/decay"
            string_val: "Adadelta/iterations"
            string_val: "Adadelta/lr"
            string_val: "conv1/bias"
            string_val: "conv1/kernel"
            string_val: "conv2_1/bias"
            string_val: "conv2_1/kernel"
            string_val: "conv2_2/bias"
            string_val: "conv2_2/kernel"
            string_val: "conv3_1/bias"
            string_val: "conv3_1/kernel"
            string_val: "conv3_2/bias"
            string_val: "conv3_2/kernel"
            string_val: "dense/bias"
            string_val: "dense/kernel"
            string_val: "fc1/bias"
            string_val: "fc1/kernel"
            string_val: "fc2/bias"
            string_val: "fc2/kernel"
            string_val: "training/Adadelta/Variable"
            string_val: "training/Adadelta/Variable_1"
            string_val: "training/Adadelta/Variable_10"
            string_val: "training/Adadelta/Variable_11"
            string_val: "training/Adadelta/Variable_12"
            string_val: "training/Adadelta/Variable_13"
            string_val: "training/Adadelta/Variable_14"
            string_val: "training/Adadelta/Variable_15"
            string_val: "training/Adadelta/Variable_16"
            string_val: "training/Adadelta/Variable_17"
            string_val: "training/Adadelta/Variable_18"
            string_val: "training/Adadelta/Variable_19"
            string_val: "training/Adadelta/Variable_2"
            string_val: "training/Adadelta/Variable_20"
            string_val: "training/Adadelta/Variable_21"
            string_val: "training/Adadelta/Variable_22"
            string_val: "training/Adadelta/Variable_23"
            string_val: "training/Adadelta/Variable_24"
            string_val: "training/Adadelta/Variable_25"
            string_val: "training/Adadelta/Variable_26"
            string_val: "training/Adadelta/Variable_27"
            string_val: "training/Adadelta/Variable_28"
            string_val: "training/Adadelta/Variable_29"
            string_val: "training/Adadelta/Variable_3"
            string_val: "training/Adadelta/Variable_30"
            string_val: "training/Adadelta/Variable_31"
            string_val: "training/Adadelta/Variable_4"
            string_val: "training/Adadelta/Variable_5"
            string_val: "training/Adadelta/Variable_6"
            string_val: "training/Adadelta/Variable_7"
            string_val: "training/Adadelta/Variable_8"
            string_val: "training/Adadelta/Variable_9"
          }
        }
      }
    }
    node {
      name: "save/SaveV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/SaveV2"
      op: "SaveV2"
      input: "save/ShardedFilename"
      input: "save/SaveV2/tensor_names"
      input: "save/SaveV2/shape_and_slices"
      input: "Adadelta/decay/Read/ReadVariableOp"
      input: "Adadelta/iterations/Read/ReadVariableOp"
      input: "Adadelta/lr/Read/ReadVariableOp"
      input: "conv1/bias/Read/ReadVariableOp"
      input: "conv1/kernel/Read/ReadVariableOp"
      input: "conv2_1/bias/Read/ReadVariableOp"
      input: "conv2_1/kernel/Read/ReadVariableOp"
      input: "conv2_2/bias/Read/ReadVariableOp"
      input: "conv2_2/kernel/Read/ReadVariableOp"
      input: "conv3_1/bias/Read/ReadVariableOp"
      input: "conv3_1/kernel/Read/ReadVariableOp"
      input: "conv3_2/bias/Read/ReadVariableOp"
      input: "conv3_2/kernel/Read/ReadVariableOp"
      input: "dense/bias/Read/ReadVariableOp"
      input: "dense/kernel/Read/ReadVariableOp"
      input: "fc1/bias/Read/ReadVariableOp"
      input: "fc1/kernel/Read/ReadVariableOp"
      input: "fc2/bias/Read/ReadVariableOp"
      input: "fc2/kernel/Read/ReadVariableOp"
      input: "training/Adadelta/Variable/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_1/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_10/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_11/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_12/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_13/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_14/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_15/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_16/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_17/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_18/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_19/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_2/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_20/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_21/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_22/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_23/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_24/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_25/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_26/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_27/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_28/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_29/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_3/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_30/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_31/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_4/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_5/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_6/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_7/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_8/Read/ReadVariableOp"
      input: "training/Adadelta/Variable_9/Read/ReadVariableOp"
      device: "/device:CPU:0"
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/control_dependency"
      op: "Identity"
      input: "save/ShardedFilename"
      input: "^save/SaveV2"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_class"
        value {
          list {
            s: "loc:@save/ShardedFilename"
          }
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints/checkpoint_prefixes"
      op: "Pack"
      input: "save/ShardedFilename"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "N"
        value {
          i: 1
        }
      }
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node {
      name: "save/MergeV2Checkpoints"
      op: "MergeV2Checkpoints"
      input: "save/MergeV2Checkpoints/checkpoint_prefixes"
      input: "save/Const"
      device: "/device:CPU:0"
      attr {
        key: "delete_old_dirs"
        value {
          b: true
        }
      }
    }
    node {
      name: "save/Identity"
      op: "Identity"
      input: "save/Const"
      input: "^save/MergeV2Checkpoints"
      input: "^save/control_dependency"
      device: "/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/tensor_names"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: "Adadelta/decay"
            string_val: "Adadelta/iterations"
            string_val: "Adadelta/lr"
            string_val: "conv1/bias"
            string_val: "conv1/kernel"
            string_val: "conv2_1/bias"
            string_val: "conv2_1/kernel"
            string_val: "conv2_2/bias"
            string_val: "conv2_2/kernel"
            string_val: "conv3_1/bias"
            string_val: "conv3_1/kernel"
            string_val: "conv3_2/bias"
            string_val: "conv3_2/kernel"
            string_val: "dense/bias"
            string_val: "dense/kernel"
            string_val: "fc1/bias"
            string_val: "fc1/kernel"
            string_val: "fc2/bias"
            string_val: "fc2/kernel"
            string_val: "training/Adadelta/Variable"
            string_val: "training/Adadelta/Variable_1"
            string_val: "training/Adadelta/Variable_10"
            string_val: "training/Adadelta/Variable_11"
            string_val: "training/Adadelta/Variable_12"
            string_val: "training/Adadelta/Variable_13"
            string_val: "training/Adadelta/Variable_14"
            string_val: "training/Adadelta/Variable_15"
            string_val: "training/Adadelta/Variable_16"
            string_val: "training/Adadelta/Variable_17"
            string_val: "training/Adadelta/Variable_18"
            string_val: "training/Adadelta/Variable_19"
            string_val: "training/Adadelta/Variable_2"
            string_val: "training/Adadelta/Variable_20"
            string_val: "training/Adadelta/Variable_21"
            string_val: "training/Adadelta/Variable_22"
            string_val: "training/Adadelta/Variable_23"
            string_val: "training/Adadelta/Variable_24"
            string_val: "training/Adadelta/Variable_25"
            string_val: "training/Adadelta/Variable_26"
            string_val: "training/Adadelta/Variable_27"
            string_val: "training/Adadelta/Variable_28"
            string_val: "training/Adadelta/Variable_29"
            string_val: "training/Adadelta/Variable_3"
            string_val: "training/Adadelta/Variable_30"
            string_val: "training/Adadelta/Variable_31"
            string_val: "training/Adadelta/Variable_4"
            string_val: "training/Adadelta/Variable_5"
            string_val: "training/Adadelta/Variable_6"
            string_val: "training/Adadelta/Variable_7"
            string_val: "training/Adadelta/Variable_8"
            string_val: "training/Adadelta/Variable_9"
          }
        }
      }
    }
    node {
      name: "save/RestoreV2/shape_and_slices"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 51
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 51
              }
            }
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
            string_val: ""
          }
        }
      }
    }
    node {
      name: "save/RestoreV2"
      op: "RestoreV2"
      input: "save/Const"
      input: "save/RestoreV2/tensor_names"
      input: "save/RestoreV2/shape_and_slices"
      device: "/device:CPU:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
            shape {
              unknown_rank: true
            }
          }
        }
      }
      attr {
        key: "dtypes"
        value {
          list {
            type: DT_FLOAT
            type: DT_INT64
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
            type: DT_FLOAT
          }
        }
      }
    }
    node {
      name: "save/Identity_1"
      op: "Identity"
      input: "save/RestoreV2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp"
      op: "AssignVariableOp"
      input: "Adadelta/decay"
      input: "save/Identity_1"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_2"
      op: "Identity"
      input: "save/RestoreV2:1"
      attr {
        key: "T"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_1"
      op: "AssignVariableOp"
      input: "Adadelta/iterations"
      input: "save/Identity_2"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
    }
    node {
      name: "save/Identity_3"
      op: "Identity"
      input: "save/RestoreV2:2"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_2"
      op: "AssignVariableOp"
      input: "Adadelta/lr"
      input: "save/Identity_3"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_4"
      op: "Identity"
      input: "save/RestoreV2:3"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_3"
      op: "AssignVariableOp"
      input: "conv1/bias"
      input: "save/Identity_4"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_5"
      op: "Identity"
      input: "save/RestoreV2:4"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_4"
      op: "AssignVariableOp"
      input: "conv1/kernel"
      input: "save/Identity_5"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_6"
      op: "Identity"
      input: "save/RestoreV2:5"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_5"
      op: "AssignVariableOp"
      input: "conv2_1/bias"
      input: "save/Identity_6"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_7"
      op: "Identity"
      input: "save/RestoreV2:6"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_6"
      op: "AssignVariableOp"
      input: "conv2_1/kernel"
      input: "save/Identity_7"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_8"
      op: "Identity"
      input: "save/RestoreV2:7"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_7"
      op: "AssignVariableOp"
      input: "conv2_2/bias"
      input: "save/Identity_8"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_9"
      op: "Identity"
      input: "save/RestoreV2:8"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_8"
      op: "AssignVariableOp"
      input: "conv2_2/kernel"
      input: "save/Identity_9"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_10"
      op: "Identity"
      input: "save/RestoreV2:9"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_9"
      op: "AssignVariableOp"
      input: "conv3_1/bias"
      input: "save/Identity_10"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_11"
      op: "Identity"
      input: "save/RestoreV2:10"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_10"
      op: "AssignVariableOp"
      input: "conv3_1/kernel"
      input: "save/Identity_11"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_12"
      op: "Identity"
      input: "save/RestoreV2:11"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_11"
      op: "AssignVariableOp"
      input: "conv3_2/bias"
      input: "save/Identity_12"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_13"
      op: "Identity"
      input: "save/RestoreV2:12"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_12"
      op: "AssignVariableOp"
      input: "conv3_2/kernel"
      input: "save/Identity_13"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_14"
      op: "Identity"
      input: "save/RestoreV2:13"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_13"
      op: "AssignVariableOp"
      input: "dense/bias"
      input: "save/Identity_14"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_15"
      op: "Identity"
      input: "save/RestoreV2:14"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_14"
      op: "AssignVariableOp"
      input: "dense/kernel"
      input: "save/Identity_15"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_16"
      op: "Identity"
      input: "save/RestoreV2:15"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_15"
      op: "AssignVariableOp"
      input: "fc1/bias"
      input: "save/Identity_16"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_17"
      op: "Identity"
      input: "save/RestoreV2:16"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_16"
      op: "AssignVariableOp"
      input: "fc1/kernel"
      input: "save/Identity_17"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_18"
      op: "Identity"
      input: "save/RestoreV2:17"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_17"
      op: "AssignVariableOp"
      input: "fc2/bias"
      input: "save/Identity_18"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_19"
      op: "Identity"
      input: "save/RestoreV2:18"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_18"
      op: "AssignVariableOp"
      input: "fc2/kernel"
      input: "save/Identity_19"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_20"
      op: "Identity"
      input: "save/RestoreV2:19"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_19"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable"
      input: "save/Identity_20"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_21"
      op: "Identity"
      input: "save/RestoreV2:20"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_20"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_1"
      input: "save/Identity_21"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_22"
      op: "Identity"
      input: "save/RestoreV2:21"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_21"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_10"
      input: "save/Identity_22"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_23"
      op: "Identity"
      input: "save/RestoreV2:22"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_22"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_11"
      input: "save/Identity_23"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_24"
      op: "Identity"
      input: "save/RestoreV2:23"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_23"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_12"
      input: "save/Identity_24"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_25"
      op: "Identity"
      input: "save/RestoreV2:24"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_24"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_13"
      input: "save/Identity_25"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_26"
      op: "Identity"
      input: "save/RestoreV2:25"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_25"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_14"
      input: "save/Identity_26"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_27"
      op: "Identity"
      input: "save/RestoreV2:26"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_26"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_15"
      input: "save/Identity_27"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_28"
      op: "Identity"
      input: "save/RestoreV2:27"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_27"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_16"
      input: "save/Identity_28"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_29"
      op: "Identity"
      input: "save/RestoreV2:28"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_28"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_17"
      input: "save/Identity_29"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_30"
      op: "Identity"
      input: "save/RestoreV2:29"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_29"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_18"
      input: "save/Identity_30"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_31"
      op: "Identity"
      input: "save/RestoreV2:30"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_30"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_19"
      input: "save/Identity_31"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_32"
      op: "Identity"
      input: "save/RestoreV2:31"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_31"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_2"
      input: "save/Identity_32"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_33"
      op: "Identity"
      input: "save/RestoreV2:32"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_32"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_20"
      input: "save/Identity_33"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_34"
      op: "Identity"
      input: "save/RestoreV2:33"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_33"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_21"
      input: "save/Identity_34"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_35"
      op: "Identity"
      input: "save/RestoreV2:34"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_34"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_22"
      input: "save/Identity_35"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_36"
      op: "Identity"
      input: "save/RestoreV2:35"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_35"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_23"
      input: "save/Identity_36"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_37"
      op: "Identity"
      input: "save/RestoreV2:36"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_36"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_24"
      input: "save/Identity_37"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_38"
      op: "Identity"
      input: "save/RestoreV2:37"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_37"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_25"
      input: "save/Identity_38"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_39"
      op: "Identity"
      input: "save/RestoreV2:38"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_38"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_26"
      input: "save/Identity_39"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_40"
      op: "Identity"
      input: "save/RestoreV2:39"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_39"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_27"
      input: "save/Identity_40"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_41"
      op: "Identity"
      input: "save/RestoreV2:40"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_40"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_28"
      input: "save/Identity_41"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_42"
      op: "Identity"
      input: "save/RestoreV2:41"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_41"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_29"
      input: "save/Identity_42"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_43"
      op: "Identity"
      input: "save/RestoreV2:42"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_42"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_3"
      input: "save/Identity_43"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_44"
      op: "Identity"
      input: "save/RestoreV2:43"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_43"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_30"
      input: "save/Identity_44"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_45"
      op: "Identity"
      input: "save/RestoreV2:44"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_44"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_31"
      input: "save/Identity_45"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_46"
      op: "Identity"
      input: "save/RestoreV2:45"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_45"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_4"
      input: "save/Identity_46"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_47"
      op: "Identity"
      input: "save/RestoreV2:46"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_46"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_5"
      input: "save/Identity_47"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_48"
      op: "Identity"
      input: "save/RestoreV2:47"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_47"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_6"
      input: "save/Identity_48"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_49"
      op: "Identity"
      input: "save/RestoreV2:48"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_48"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_7"
      input: "save/Identity_49"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_50"
      op: "Identity"
      input: "save/RestoreV2:49"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_49"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_8"
      input: "save/Identity_50"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/Identity_51"
      op: "Identity"
      input: "save/RestoreV2:50"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              unknown_rank: true
            }
          }
        }
      }
    }
    node {
      name: "save/AssignVariableOp_50"
      op: "AssignVariableOp"
      input: "training/Adadelta/Variable_9"
      input: "save/Identity_51"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node {
      name: "save/restore_shard"
      op: "NoOp"
      input: "^save/AssignVariableOp"
      input: "^save/AssignVariableOp_1"
      input: "^save/AssignVariableOp_10"
      input: "^save/AssignVariableOp_11"
      input: "^save/AssignVariableOp_12"
      input: "^save/AssignVariableOp_13"
      input: "^save/AssignVariableOp_14"
      input: "^save/AssignVariableOp_15"
      input: "^save/AssignVariableOp_16"
      input: "^save/AssignVariableOp_17"
      input: "^save/AssignVariableOp_18"
      input: "^save/AssignVariableOp_19"
      input: "^save/AssignVariableOp_2"
      input: "^save/AssignVariableOp_20"
      input: "^save/AssignVariableOp_21"
      input: "^save/AssignVariableOp_22"
      input: "^save/AssignVariableOp_23"
      input: "^save/AssignVariableOp_24"
      input: "^save/AssignVariableOp_25"
      input: "^save/AssignVariableOp_26"
      input: "^save/AssignVariableOp_27"
      input: "^save/AssignVariableOp_28"
      input: "^save/AssignVariableOp_29"
      input: "^save/AssignVariableOp_3"
      input: "^save/AssignVariableOp_30"
      input: "^save/AssignVariableOp_31"
      input: "^save/AssignVariableOp_32"
      input: "^save/AssignVariableOp_33"
      input: "^save/AssignVariableOp_34"
      input: "^save/AssignVariableOp_35"
      input: "^save/AssignVariableOp_36"
      input: "^save/AssignVariableOp_37"
      input: "^save/AssignVariableOp_38"
      input: "^save/AssignVariableOp_39"
      input: "^save/AssignVariableOp_4"
      input: "^save/AssignVariableOp_40"
      input: "^save/AssignVariableOp_41"
      input: "^save/AssignVariableOp_42"
      input: "^save/AssignVariableOp_43"
      input: "^save/AssignVariableOp_44"
      input: "^save/AssignVariableOp_45"
      input: "^save/AssignVariableOp_46"
      input: "^save/AssignVariableOp_47"
      input: "^save/AssignVariableOp_48"
      input: "^save/AssignVariableOp_49"
      input: "^save/AssignVariableOp_5"
      input: "^save/AssignVariableOp_50"
      input: "^save/AssignVariableOp_6"
      input: "^save/AssignVariableOp_7"
      input: "^save/AssignVariableOp_8"
      input: "^save/AssignVariableOp_9"
    }
    node {
      name: "save/restore_all"
      op: "NoOp"
      input: "^save/restore_shard"
    }
    versions {
      producer: 27
    }
  }
  saver_def {
    filename_tensor_name: "save/Const:0"
    save_tensor_name: "save/Identity:0"
    restore_op_name: "save/restore_all"
    max_to_keep: 5
    sharded: true
    keep_checkpoint_every_n_hours: 10000.0
    version: V2
  }
  collection_def {
    key: "cond_context"
    value {
      bytes_list {
        value: "\nOloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/cond_text\022Oloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\032Ploss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t:0 \001*\311\005\nBloss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar:0\nPloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1:0\nPloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1:1\nOloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\nPloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t:0\022\226\001\nBloss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar:0\022Ploss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1:1\022\242\001\nOloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\022Oloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0"
        value: "\nQloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/cond_text_1\022Oloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\032Ploss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f:0*\344&\ngloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge:0\ngloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge:1\nhloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:0\nhloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch:1\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1:0\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1:1\n\213\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:0\n\213\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1\n\213\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:2\n\204\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch:0\n\201\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim:0\n}loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims:0\n\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch:0\n\203\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim:0\n\177loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1:0\n~loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis:0\nyloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat:0\n\203\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims:0\n\202\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const:0\n\202\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape:0\n|loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like:0\ntloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x:0\nrloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims:0\nuloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch:0\nwloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1:0\nnloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank:0\niloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f:0\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t:0\nOloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\nPloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f:0\nDloss/dense_loss/broadcast_weights/assert_broadcastable/values/rank:0\nEloss/dense_loss/broadcast_weights/assert_broadcastable/values/shape:0\nEloss/dense_loss/broadcast_weights/assert_broadcastable/weights/rank:0\nFloss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape:0\022\242\001\nOloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\022Oloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id:0\022\316\001\nEloss/dense_loss/broadcast_weights/assert_broadcastable/values/shape:0\022\204\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch:0\022\300\001\nEloss/dense_loss/broadcast_weights/assert_broadcastable/weights/rank:0\022wloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1:0\022\321\001\nFloss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape:0\022\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch:0\022\275\001\nDloss/dense_loss/broadcast_weights/assert_broadcastable/values/rank:0\022uloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch:02\243\"\n\240\"\niloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/cond_text\022iloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\032jloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t:0 \001*\331\037\n\213\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:0\n\213\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:1\n\213\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation:2\n\204\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch:0\n\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1\n\201\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim:0\n}loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims:0\n\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch:0\n\210\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1\n\203\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim:0\n\177loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1:0\n~loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis:0\nyloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat:0\n\203\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims:0\n\202\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const:0\n\202\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape:0\n|loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like:0\ntloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x:0\nrloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims:0\niloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t:0\nEloss/dense_loss/broadcast_weights/assert_broadcastable/values/shape:0\nFloss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape:0\022\216\002\n\204\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch:0\022\204\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch:0\022\320\001\nEloss/dense_loss/broadcast_weights/assert_broadcastable/values/shape:0\022\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1:1\022\323\001\nFloss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape:0\022\210\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1:1\022\222\002\n\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch:0\022\206\001loss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch:0\022\326\001\niloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\022iloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:02\241\n\n\236\n\nkloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/cond_text_1\022iloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\032jloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f:0*\327\007\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1:0\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1:1\nnloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank:0\niloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\njloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f:0\022\326\001\niloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\022iloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id:0\022\334\001\nnloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank:0\022jloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1:0"
        value: "\nLloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/cond_text\022Lloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0\032Mloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t:0 \001*\225\003\nWloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency:0\nLloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0\nMloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t:0\022\234\001\nLloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0\022Lloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0"
        value: "\nNloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/cond_text_1\022Lloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0\032Mloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f:0*\213\021\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch:0\nTloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1:0\nTloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2:0\nTloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3:0\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0:0\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1:0\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2:0\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4:0\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5:0\nRloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7:0\nYloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1:0\nLloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0\nMloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f:0\nBloss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar:0\nMloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge:0\nEloss/dense_loss/broadcast_weights/assert_broadcastable/values/shape:0\nFloss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape:0\022\232\001\nBloss/dense_loss/broadcast_weights/assert_broadcastable/is_scalar:0\022Tloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3:0\022\235\001\nEloss/dense_loss/broadcast_weights/assert_broadcastable/values/shape:0\022Tloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2:0\022\243\001\nMloss/dense_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge:0\022Rloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch:0\022\236\001\nFloss/dense_loss/broadcast_weights/assert_broadcastable/weights/shape:0\022Tloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1:0\022\234\001\nLloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0\022Lloss/dense_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id:0"
      }
    }
  }
  collection_def {
    key: "trainable_variables"
    value {
      bytes_list {
        value: "\n\016conv1/kernel:0\022\023conv1/kernel/Assign\032\"conv1/kernel/Read/ReadVariableOp:0(\0012)conv1/kernel/Initializer/random_uniform:08\001"
        value: "\n\014conv1/bias:0\022\021conv1/bias/Assign\032 conv1/bias/Read/ReadVariableOp:0(\0012\036conv1/bias/Initializer/zeros:08\001"
        value: "\n\020conv2_1/kernel:0\022\025conv2_1/kernel/Assign\032$conv2_1/kernel/Read/ReadVariableOp:0(\0012+conv2_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv2_1/bias:0\022\023conv2_1/bias/Assign\032\"conv2_1/bias/Read/ReadVariableOp:0(\0012 conv2_1/bias/Initializer/zeros:08\001"
        value: "\n\020conv2_2/kernel:0\022\025conv2_2/kernel/Assign\032$conv2_2/kernel/Read/ReadVariableOp:0(\0012+conv2_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv2_2/bias:0\022\023conv2_2/bias/Assign\032\"conv2_2/bias/Read/ReadVariableOp:0(\0012 conv2_2/bias/Initializer/zeros:08\001"
        value: "\n\020conv3_1/kernel:0\022\025conv3_1/kernel/Assign\032$conv3_1/kernel/Read/ReadVariableOp:0(\0012+conv3_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv3_1/bias:0\022\023conv3_1/bias/Assign\032\"conv3_1/bias/Read/ReadVariableOp:0(\0012 conv3_1/bias/Initializer/zeros:08\001"
        value: "\n\020conv3_2/kernel:0\022\025conv3_2/kernel/Assign\032$conv3_2/kernel/Read/ReadVariableOp:0(\0012+conv3_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv3_2/bias:0\022\023conv3_2/bias/Assign\032\"conv3_2/bias/Read/ReadVariableOp:0(\0012 conv3_2/bias/Initializer/zeros:08\001"
        value: "\n\014fc1/kernel:0\022\021fc1/kernel/Assign\032 fc1/kernel/Read/ReadVariableOp:0(\0012\'fc1/kernel/Initializer/random_uniform:08\001"
        value: "\n\nfc1/bias:0\022\017fc1/bias/Assign\032\036fc1/bias/Read/ReadVariableOp:0(\0012\034fc1/bias/Initializer/zeros:08\001"
        value: "\n\014fc2/kernel:0\022\021fc2/kernel/Assign\032 fc2/kernel/Read/ReadVariableOp:0(\0012\'fc2/kernel/Initializer/random_uniform:08\001"
        value: "\n\nfc2/bias:0\022\017fc2/bias/Assign\032\036fc2/bias/Read/ReadVariableOp:0(\0012\034fc2/bias/Initializer/zeros:08\001"
        value: "\n\016dense/kernel:0\022\023dense/kernel/Assign\032\"dense/kernel/Read/ReadVariableOp:0(\0012)dense/kernel/Initializer/random_uniform:08\001"
        value: "\n\014dense/bias:0\022\021dense/bias/Assign\032 dense/bias/Read/ReadVariableOp:0(\0012\036dense/bias/Initializer/zeros:08\001"
        value: "\n\rAdadelta/lr:0\022\022Adadelta/lr/Assign\032!Adadelta/lr/Read/ReadVariableOp:0(\0012\'Adadelta/lr/Initializer/initial_value:08\001"
        value: "\n\020Adadelta/decay:0\022\025Adadelta/decay/Assign\032$Adadelta/decay/Read/ReadVariableOp:0(\0012*Adadelta/decay/Initializer/initial_value:08\001"
        value: "\n\025Adadelta/iterations:0\022\032Adadelta/iterations/Assign\032)Adadelta/iterations/Read/ReadVariableOp:0(\0012/Adadelta/iterations/Initializer/initial_value:08\001"
        value: "\n\034training/Adadelta/Variable:0\022!training/Adadelta/Variable/Assign\0320training/Adadelta/Variable/Read/ReadVariableOp:0(\0012\031training/Adadelta/zeros:08\001"
        value: "\n\036training/Adadelta/Variable_1:0\022#training/Adadelta/Variable_1/Assign\0322training/Adadelta/Variable_1/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_1:08\001"
        value: "\n\036training/Adadelta/Variable_2:0\022#training/Adadelta/Variable_2/Assign\0322training/Adadelta/Variable_2/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_2:08\001"
        value: "\n\036training/Adadelta/Variable_3:0\022#training/Adadelta/Variable_3/Assign\0322training/Adadelta/Variable_3/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_3:08\001"
        value: "\n\036training/Adadelta/Variable_4:0\022#training/Adadelta/Variable_4/Assign\0322training/Adadelta/Variable_4/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_4:08\001"
        value: "\n\036training/Adadelta/Variable_5:0\022#training/Adadelta/Variable_5/Assign\0322training/Adadelta/Variable_5/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_5:08\001"
        value: "\n\036training/Adadelta/Variable_6:0\022#training/Adadelta/Variable_6/Assign\0322training/Adadelta/Variable_6/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_6:08\001"
        value: "\n\036training/Adadelta/Variable_7:0\022#training/Adadelta/Variable_7/Assign\0322training/Adadelta/Variable_7/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_7:08\001"
        value: "\n\036training/Adadelta/Variable_8:0\022#training/Adadelta/Variable_8/Assign\0322training/Adadelta/Variable_8/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_8:08\001"
        value: "\n\036training/Adadelta/Variable_9:0\022#training/Adadelta/Variable_9/Assign\0322training/Adadelta/Variable_9/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_9:08\001"
        value: "\n\037training/Adadelta/Variable_10:0\022$training/Adadelta/Variable_10/Assign\0323training/Adadelta/Variable_10/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_10:08\001"
        value: "\n\037training/Adadelta/Variable_11:0\022$training/Adadelta/Variable_11/Assign\0323training/Adadelta/Variable_11/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_11:08\001"
        value: "\n\037training/Adadelta/Variable_12:0\022$training/Adadelta/Variable_12/Assign\0323training/Adadelta/Variable_12/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_12:08\001"
        value: "\n\037training/Adadelta/Variable_13:0\022$training/Adadelta/Variable_13/Assign\0323training/Adadelta/Variable_13/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_13:08\001"
        value: "\n\037training/Adadelta/Variable_14:0\022$training/Adadelta/Variable_14/Assign\0323training/Adadelta/Variable_14/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_14:08\001"
        value: "\n\037training/Adadelta/Variable_15:0\022$training/Adadelta/Variable_15/Assign\0323training/Adadelta/Variable_15/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_15:08\001"
        value: "\n\037training/Adadelta/Variable_16:0\022$training/Adadelta/Variable_16/Assign\0323training/Adadelta/Variable_16/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_16:08\001"
        value: "\n\037training/Adadelta/Variable_17:0\022$training/Adadelta/Variable_17/Assign\0323training/Adadelta/Variable_17/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_17:08\001"
        value: "\n\037training/Adadelta/Variable_18:0\022$training/Adadelta/Variable_18/Assign\0323training/Adadelta/Variable_18/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_18:08\001"
        value: "\n\037training/Adadelta/Variable_19:0\022$training/Adadelta/Variable_19/Assign\0323training/Adadelta/Variable_19/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_19:08\001"
        value: "\n\037training/Adadelta/Variable_20:0\022$training/Adadelta/Variable_20/Assign\0323training/Adadelta/Variable_20/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_20:08\001"
        value: "\n\037training/Adadelta/Variable_21:0\022$training/Adadelta/Variable_21/Assign\0323training/Adadelta/Variable_21/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_21:08\001"
        value: "\n\037training/Adadelta/Variable_22:0\022$training/Adadelta/Variable_22/Assign\0323training/Adadelta/Variable_22/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_22:08\001"
        value: "\n\037training/Adadelta/Variable_23:0\022$training/Adadelta/Variable_23/Assign\0323training/Adadelta/Variable_23/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_23:08\001"
        value: "\n\037training/Adadelta/Variable_24:0\022$training/Adadelta/Variable_24/Assign\0323training/Adadelta/Variable_24/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_24:08\001"
        value: "\n\037training/Adadelta/Variable_25:0\022$training/Adadelta/Variable_25/Assign\0323training/Adadelta/Variable_25/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_25:08\001"
        value: "\n\037training/Adadelta/Variable_26:0\022$training/Adadelta/Variable_26/Assign\0323training/Adadelta/Variable_26/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_26:08\001"
        value: "\n\037training/Adadelta/Variable_27:0\022$training/Adadelta/Variable_27/Assign\0323training/Adadelta/Variable_27/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_27:08\001"
        value: "\n\037training/Adadelta/Variable_28:0\022$training/Adadelta/Variable_28/Assign\0323training/Adadelta/Variable_28/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_28:08\001"
        value: "\n\037training/Adadelta/Variable_29:0\022$training/Adadelta/Variable_29/Assign\0323training/Adadelta/Variable_29/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_29:08\001"
        value: "\n\037training/Adadelta/Variable_30:0\022$training/Adadelta/Variable_30/Assign\0323training/Adadelta/Variable_30/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_30:08\001"
        value: "\n\037training/Adadelta/Variable_31:0\022$training/Adadelta/Variable_31/Assign\0323training/Adadelta/Variable_31/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_31:08\001"
      }
    }
  }
  collection_def {
    key: "variables"
    value {
      bytes_list {
        value: "\n\016conv1/kernel:0\022\023conv1/kernel/Assign\032\"conv1/kernel/Read/ReadVariableOp:0(\0012)conv1/kernel/Initializer/random_uniform:08\001"
        value: "\n\014conv1/bias:0\022\021conv1/bias/Assign\032 conv1/bias/Read/ReadVariableOp:0(\0012\036conv1/bias/Initializer/zeros:08\001"
        value: "\n\020conv2_1/kernel:0\022\025conv2_1/kernel/Assign\032$conv2_1/kernel/Read/ReadVariableOp:0(\0012+conv2_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv2_1/bias:0\022\023conv2_1/bias/Assign\032\"conv2_1/bias/Read/ReadVariableOp:0(\0012 conv2_1/bias/Initializer/zeros:08\001"
        value: "\n\020conv2_2/kernel:0\022\025conv2_2/kernel/Assign\032$conv2_2/kernel/Read/ReadVariableOp:0(\0012+conv2_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv2_2/bias:0\022\023conv2_2/bias/Assign\032\"conv2_2/bias/Read/ReadVariableOp:0(\0012 conv2_2/bias/Initializer/zeros:08\001"
        value: "\n\020conv3_1/kernel:0\022\025conv3_1/kernel/Assign\032$conv3_1/kernel/Read/ReadVariableOp:0(\0012+conv3_1/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv3_1/bias:0\022\023conv3_1/bias/Assign\032\"conv3_1/bias/Read/ReadVariableOp:0(\0012 conv3_1/bias/Initializer/zeros:08\001"
        value: "\n\020conv3_2/kernel:0\022\025conv3_2/kernel/Assign\032$conv3_2/kernel/Read/ReadVariableOp:0(\0012+conv3_2/kernel/Initializer/random_uniform:08\001"
        value: "\n\016conv3_2/bias:0\022\023conv3_2/bias/Assign\032\"conv3_2/bias/Read/ReadVariableOp:0(\0012 conv3_2/bias/Initializer/zeros:08\001"
        value: "\n\014fc1/kernel:0\022\021fc1/kernel/Assign\032 fc1/kernel/Read/ReadVariableOp:0(\0012\'fc1/kernel/Initializer/random_uniform:08\001"
        value: "\n\nfc1/bias:0\022\017fc1/bias/Assign\032\036fc1/bias/Read/ReadVariableOp:0(\0012\034fc1/bias/Initializer/zeros:08\001"
        value: "\n\014fc2/kernel:0\022\021fc2/kernel/Assign\032 fc2/kernel/Read/ReadVariableOp:0(\0012\'fc2/kernel/Initializer/random_uniform:08\001"
        value: "\n\nfc2/bias:0\022\017fc2/bias/Assign\032\036fc2/bias/Read/ReadVariableOp:0(\0012\034fc2/bias/Initializer/zeros:08\001"
        value: "\n\016dense/kernel:0\022\023dense/kernel/Assign\032\"dense/kernel/Read/ReadVariableOp:0(\0012)dense/kernel/Initializer/random_uniform:08\001"
        value: "\n\014dense/bias:0\022\021dense/bias/Assign\032 dense/bias/Read/ReadVariableOp:0(\0012\036dense/bias/Initializer/zeros:08\001"
        value: "\n\rAdadelta/lr:0\022\022Adadelta/lr/Assign\032!Adadelta/lr/Read/ReadVariableOp:0(\0012\'Adadelta/lr/Initializer/initial_value:08\001"
        value: "\n\020Adadelta/decay:0\022\025Adadelta/decay/Assign\032$Adadelta/decay/Read/ReadVariableOp:0(\0012*Adadelta/decay/Initializer/initial_value:08\001"
        value: "\n\025Adadelta/iterations:0\022\032Adadelta/iterations/Assign\032)Adadelta/iterations/Read/ReadVariableOp:0(\0012/Adadelta/iterations/Initializer/initial_value:08\001"
        value: "\n\034training/Adadelta/Variable:0\022!training/Adadelta/Variable/Assign\0320training/Adadelta/Variable/Read/ReadVariableOp:0(\0012\031training/Adadelta/zeros:08\001"
        value: "\n\036training/Adadelta/Variable_1:0\022#training/Adadelta/Variable_1/Assign\0322training/Adadelta/Variable_1/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_1:08\001"
        value: "\n\036training/Adadelta/Variable_2:0\022#training/Adadelta/Variable_2/Assign\0322training/Adadelta/Variable_2/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_2:08\001"
        value: "\n\036training/Adadelta/Variable_3:0\022#training/Adadelta/Variable_3/Assign\0322training/Adadelta/Variable_3/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_3:08\001"
        value: "\n\036training/Adadelta/Variable_4:0\022#training/Adadelta/Variable_4/Assign\0322training/Adadelta/Variable_4/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_4:08\001"
        value: "\n\036training/Adadelta/Variable_5:0\022#training/Adadelta/Variable_5/Assign\0322training/Adadelta/Variable_5/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_5:08\001"
        value: "\n\036training/Adadelta/Variable_6:0\022#training/Adadelta/Variable_6/Assign\0322training/Adadelta/Variable_6/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_6:08\001"
        value: "\n\036training/Adadelta/Variable_7:0\022#training/Adadelta/Variable_7/Assign\0322training/Adadelta/Variable_7/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_7:08\001"
        value: "\n\036training/Adadelta/Variable_8:0\022#training/Adadelta/Variable_8/Assign\0322training/Adadelta/Variable_8/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_8:08\001"
        value: "\n\036training/Adadelta/Variable_9:0\022#training/Adadelta/Variable_9/Assign\0322training/Adadelta/Variable_9/Read/ReadVariableOp:0(\0012\033training/Adadelta/zeros_9:08\001"
        value: "\n\037training/Adadelta/Variable_10:0\022$training/Adadelta/Variable_10/Assign\0323training/Adadelta/Variable_10/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_10:08\001"
        value: "\n\037training/Adadelta/Variable_11:0\022$training/Adadelta/Variable_11/Assign\0323training/Adadelta/Variable_11/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_11:08\001"
        value: "\n\037training/Adadelta/Variable_12:0\022$training/Adadelta/Variable_12/Assign\0323training/Adadelta/Variable_12/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_12:08\001"
        value: "\n\037training/Adadelta/Variable_13:0\022$training/Adadelta/Variable_13/Assign\0323training/Adadelta/Variable_13/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_13:08\001"
        value: "\n\037training/Adadelta/Variable_14:0\022$training/Adadelta/Variable_14/Assign\0323training/Adadelta/Variable_14/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_14:08\001"
        value: "\n\037training/Adadelta/Variable_15:0\022$training/Adadelta/Variable_15/Assign\0323training/Adadelta/Variable_15/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_15:08\001"
        value: "\n\037training/Adadelta/Variable_16:0\022$training/Adadelta/Variable_16/Assign\0323training/Adadelta/Variable_16/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_16:08\001"
        value: "\n\037training/Adadelta/Variable_17:0\022$training/Adadelta/Variable_17/Assign\0323training/Adadelta/Variable_17/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_17:08\001"
        value: "\n\037training/Adadelta/Variable_18:0\022$training/Adadelta/Variable_18/Assign\0323training/Adadelta/Variable_18/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_18:08\001"
        value: "\n\037training/Adadelta/Variable_19:0\022$training/Adadelta/Variable_19/Assign\0323training/Adadelta/Variable_19/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_19:08\001"
        value: "\n\037training/Adadelta/Variable_20:0\022$training/Adadelta/Variable_20/Assign\0323training/Adadelta/Variable_20/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_20:08\001"
        value: "\n\037training/Adadelta/Variable_21:0\022$training/Adadelta/Variable_21/Assign\0323training/Adadelta/Variable_21/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_21:08\001"
        value: "\n\037training/Adadelta/Variable_22:0\022$training/Adadelta/Variable_22/Assign\0323training/Adadelta/Variable_22/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_22:08\001"
        value: "\n\037training/Adadelta/Variable_23:0\022$training/Adadelta/Variable_23/Assign\0323training/Adadelta/Variable_23/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_23:08\001"
        value: "\n\037training/Adadelta/Variable_24:0\022$training/Adadelta/Variable_24/Assign\0323training/Adadelta/Variable_24/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_24:08\001"
        value: "\n\037training/Adadelta/Variable_25:0\022$training/Adadelta/Variable_25/Assign\0323training/Adadelta/Variable_25/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_25:08\001"
        value: "\n\037training/Adadelta/Variable_26:0\022$training/Adadelta/Variable_26/Assign\0323training/Adadelta/Variable_26/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_26:08\001"
        value: "\n\037training/Adadelta/Variable_27:0\022$training/Adadelta/Variable_27/Assign\0323training/Adadelta/Variable_27/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_27:08\001"
        value: "\n\037training/Adadelta/Variable_28:0\022$training/Adadelta/Variable_28/Assign\0323training/Adadelta/Variable_28/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_28:08\001"
        value: "\n\037training/Adadelta/Variable_29:0\022$training/Adadelta/Variable_29/Assign\0323training/Adadelta/Variable_29/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_29:08\001"
        value: "\n\037training/Adadelta/Variable_30:0\022$training/Adadelta/Variable_30/Assign\0323training/Adadelta/Variable_30/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_30:08\001"
        value: "\n\037training/Adadelta/Variable_31:0\022$training/Adadelta/Variable_31/Assign\0323training/Adadelta/Variable_31/Read/ReadVariableOp:0(\0012\034training/Adadelta/zeros_31:08\001"
      }
    }
  }
  signature_def {
    key: "predict_images"
    value {
      inputs {
        key: "height"
        value {
          name: "input_3:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 28
            }
          }
        }
      }
      inputs {
        key: "images"
        value {
          name: "input_2:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 1
            }
            dim {
              size: 28
            }
            dim {
              size: 28
            }
            dim {
              size: 1
            }
          }
        }
      }
      inputs {
        key: "width"
        value {
          name: "input_4:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: -1
            }
            dim {
              size: 28
            }
          }
        }
      }
      outputs {
        key: "classification"
        value {
          name: "dense/Softmax:0"
          dtype: DT_FLOAT
          tensor_shape {
            dim {
              size: -1
            }
            dim {
              size: 10
            }
          }
        }
      }
      method_name: "tensorflow/serving/predict"
    }
  }
}
